{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/main.vue?6f44","webpack:///./src/main.vue?c4e2","webpack:///./src/main.vue","webpack:///./src/dice.ts","webpack:///./src/shaders/vertex.glsl","webpack:///./src/shaders/fragment.glsl","webpack:///./src/diceroll.ts","webpack:///./src/main.vue?3062","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","class","ref","results","join","reduce","v","Edge","randomQuaternion","random","u","w","Math","sqrt","sin","PI","cos","defineDieGeometry","rounding","edgeDetail","angleCCW","p1","p2","origin","normal","v1","vsub","v2","cosine","min","max","dot","theta","acos","cross","sortCCW","points","center","vadd","scale","sort","a","b","allFaces","allNormals","vertexCenters","vertices","map","A","set","faces","x","y","z","invert","B","applyMatrix3","assert","every","f","abs","point","edges","edge","o1","indexOf","o2","q1","setFromVectors","q2","q","slerp","v11","vmult","v21","v12","v22","inset","ccw","u0","unit","u1","offsets","diff","range","multiplyScalar","threeTextures","threeVertices","threeNormals","threeFaces","i0","uv","geometries","geometry","setAttribute","Float32Array","setIndex","sphere","translate","matrix","attributes","applyMatrix4","defineDieShape","normals","defineDieModel","numFaces","fn","edgeLengths","i1","i2","distance","some","findFaces","target","maxDepth","cycles","queue","pop","node","path","next","otherVertex","includes","edgesPerFace","faceEdges","Set","e","add","faceVertices","find","almostEquals","face","defineDieTexture","canvas","document","createElement","width","height","context","getContext","fillStyle","fillRect","textAlign","textBaseline","text","rotation","offset","rotate","fillText","resetTransform","texture","defineDie","model","shape","Die","createObject","die","vertexShader","vertex","fragmentShader","fragment","material2","depthTest","depthWrite","visible","roughness","metalness","clearcoat","clearcoatRoughness","reflectivity","transparent","g","mesh","castShadow","createBody","mass","body","initRoll","roll","position","clone","quaternion","orientation","velocity","angularVelocity","update","resolve","spin","lengthSquared","UNIT_Y","type","STATIC","undefined","d4Model","setFromAxisAngle","UNIT_Z","q3","mult","q4","leg","d4Shape","d4Texture","ctx","font","d4Geometry","d4Results","d4","d6Model","d6Shape","d6Texture","d6Geometry","d6Results","d6","d8Model","SQRT2","d8Shape","d8Texture","d8Geometry","d8Results","d8","d10Model","edge1","a1","r1","h1","r2","a2","atan","a3","lawOfSines","legLength","legAngle1","asin","legAngle2","tall","UNIT_X","negate","d10Shape","d10Texture","d10Geometry","d10Results","d10","d12Model","phi","d12Shape","d12Geometry","d12Texture","d12Results","d12","d20Model","d20Shape","d20Geometry","d20Texture","d20Results","d20","loadDice","rollDie","velDir","spinDir","initScene","scene","camera","lookAt","renderer","alpha","antialias","shadowMap","enabled","ambientLight","halfDiagonal","right","top","directionalLight1","shadow","mapSize","near","far","bottom","left","tableGeometry","tableMaterial","opacity","table","rotateX","receiveShadow","initWorld","viewport","world","gravity","wallMaterial","floorMaterial","floor","material","walls","addBody","addContactMaterial","defaultMaterial","friction","initDiceRoller","dice","box","getBoundingClientRect","objects","allDice","Reflect","ownKeys","k","pickers","setFromUnitVectors","copy","sub","normalize","applyQuaternion","multiply","hitTest","pos","picker","picking","onMouseEvent","offsetX","offsetY","addEventListener","pick","active","remove","removeBody","render","style","cursor","axis","updateMatrix","step","done","bumps","contacts","bi","bj","strength","time","wall","applyForce","dir","requestAnimationFrame","setup","props","__exports__","app","mount"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAG/Be,GAAqBA,EAAoBhB,GAE5C,MAAMO,EAASC,OACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrB,MAAS,GAGNK,EAAkB,GAGtB,SAASS,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU6B,QAGnC,IAAIC,EAASF,EAAiB5B,GAAY,CACzCK,EAAGL,EACH+B,GAAG,EACHF,QAAS,IAUV,OANAf,EAAQd,GAAUW,KAAKmB,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAG/DI,EAAOC,GAAI,EAGJD,EAAOD,QAKfH,EAAoBM,EAAIlB,EAGxBY,EAAoBO,EAAIL,EAGxBF,EAAoBQ,EAAI,SAASL,EAASM,EAAMC,GAC3CV,EAAoBW,EAAER,EAASM,IAClC3B,OAAO8B,eAAeT,EAASM,EAAM,CAAEI,YAAY,EAAMC,IAAKJ,KAKhEV,EAAoBe,EAAI,SAASZ,GACX,qBAAXa,QAA0BA,OAAOC,aAC1CnC,OAAO8B,eAAeT,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DpC,OAAO8B,eAAeT,EAAS,aAAc,CAAEe,OAAO,KAQvDlB,EAAoBmB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQlB,EAAoBkB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,kBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKxC,OAAOyC,OAAO,MAGvB,GAFAvB,EAAoBe,EAAEO,GACtBxC,OAAO8B,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOlB,EAAoBQ,EAAEc,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRtB,EAAoB0B,EAAI,SAAStB,GAChC,IAAIM,EAASN,GAAUA,EAAOiB,WAC7B,WAAwB,OAAOjB,EAAO,YACtC,WAA8B,OAAOA,GAEtC,OADAJ,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASgB,EAAQC,GAAY,OAAO9C,OAAOC,UAAUC,eAAeC,KAAK0C,EAAQC,IAGzG5B,EAAoB6B,EAAI,GAExB,IAAIC,EAAaC,OAAO,gBAAkBA,OAAO,iBAAmB,GAChEC,EAAmBF,EAAW3C,KAAKsC,KAAKK,GAC5CA,EAAW3C,KAAOf,EAClB0D,EAAaA,EAAWG,QACxB,IAAI,IAAItD,EAAI,EAAGA,EAAImD,EAAWjD,OAAQF,IAAKP,EAAqB0D,EAAWnD,IAC3E,IAAIU,EAAsB2C,EAI1BzC,EAAgBJ,KAAK,CAAC,EAAE,kBAEjBM,K,6HCvJT,W,kCCAA,W,+NCCE,eAAoC,QAA9ByC,MAAM,cAAa,QAAI,M,GAErBC,IAAI,U,SAEND,MAAM,W,4EAJZ,EAEA,eAAuB,SAAvB,EAAuB,UAEK,EAAAE,S,iBAA5B,eAKO,OALP,EAKO,C,8BAJF,EAAAA,QAAQC,KAAI,QAAU,IACzB,GAAgB,EAAAD,QAAQvD,OAAM,G,iBAA9B,eAEW,gB,eAFyB,MAChC,eAAG,EAAAuD,QAAQE,QAAM,SAAErC,EAAGsC,GAAL,OAAWtC,EAAIsC,IAAC,Q,6DCYxBC,EAgCA,E,8dCpDF,wVCAA,wkEF0JT,SAAUC,EAAiBC,GAC/B,IAAMC,EAAID,IACJH,EAAIG,IACJE,EAAIF,IAEV,OAAO,IAAI,OACTG,KAAKC,KAAK,EAAIH,GAAKE,KAAKE,IAAI,EAAIF,KAAKG,GAAKT,GAC1CM,KAAKC,KAAK,EAAIH,GAAKE,KAAKI,IAAI,EAAIJ,KAAKG,GAAKT,GAC1CM,KAAKC,KAAKH,GAAKE,KAAKE,IAAI,EAAIF,KAAKG,GAAKJ,GACtCC,KAAKC,KAAKH,GAAKE,KAAKI,IAAI,EAAIJ,KAAKG,GAAKJ,IAI1C,SAASM,EAAkB5C,GACzB,OAAO,SAAC6C,EAAUC,GAChB,SAASC,EAASC,EAAUC,EAAUC,EAAcC,GAClD,IAAMC,EAAKJ,EAAGK,KAAKH,GACbI,EAAKL,EAAGI,KAAKH,GACbK,EAAShB,KAAKiB,IAAI,EAAGjB,KAAKkB,KAAK,EAAGL,EAAGM,IAAIJ,GAAMF,EAAG7E,SAAW+E,EAAG/E,WAChEoF,EAAQpB,KAAKqB,KAAKL,GAClBM,EAAQT,EAAGS,MAAMP,GAAII,IAAIP,GAE/B,OAAIU,GAAS,EACJF,EAEU,EAAVpB,KAAKG,GAASiB,EAIzB,SAASG,EAAQC,EAAgBZ,GAC/B,IAD2C,EACrCa,EAAS,IAAI,OADwB,iBAE3BD,GAF2B,IAE3C,gCAAW9B,EAAX,QAAwB+B,EAAOC,KAAKhC,EAAG+B,IAFI,8BAG3CA,EAAOE,MAAM,EAAIH,EAAOxF,OAAQyF,GAEhC,IAAMnC,EAAMkC,EAAO,GACnB,OAAOA,EAAOpC,QAAQwC,MAAK,SAACC,EAAGC,GAC7B,OAAOtB,EAASlB,EAAKuC,EAAGJ,EAAQb,GAAUJ,EAASlB,EAAKwC,EAAGL,EAAQb,MAIvE,IA1B8B,EA0BxBmB,EAAgC,GAChCC,EAAqB,GAErBC,EAAgBxE,EAAEyE,SAASC,KAAI,SAAAzC,GACnC,IAAM0C,GAAI,IAAI,QAAUC,IACtB3C,EAAE4C,MAAM,GAAG1B,OAAO2B,EAAG7C,EAAE4C,MAAM,GAAG1B,OAAO4B,EAAG9C,EAAE4C,MAAM,GAAG1B,OAAO6B,EAC5D/C,EAAE4C,MAAM,GAAG1B,OAAO2B,EAAG7C,EAAE4C,MAAM,GAAG1B,OAAO4B,EAAG9C,EAAE4C,MAAM,GAAG1B,OAAO6B,EAC5D/C,EAAE4C,MAAM,GAAG1B,OAAO2B,EAAG7C,EAAE4C,MAAM,GAAG1B,OAAO4B,EAAG9C,EAAE4C,MAAM,GAAG1B,OAAO6B,GAG9DL,EAAEM,SAEF,IAAMC,EAAI,IAAI,QAASrC,GAAWA,GAAWA,GACvCiC,EAAII,EAAEC,aAAaR,GACnBI,EAAI,IAAI,OAAKD,EAAEA,EAAGA,EAAEC,EAAGD,EAAEE,GAI/B,OAFA,OAAAI,EAAA,MAAOnD,EAAE4C,MAAMQ,OAAM,SAAAC,GAAC,OAAI/C,KAAKgD,IAAID,EAAEnC,OAAOO,IAAIqB,GAAKlC,GAAY,QAAO,YAEjEZ,EAAEuD,MAAMvB,KAAKc,MA5CQ,iBA+CX/E,EAAEyF,OA/CS,IA+C9B,2BAQE,IAR0B,IAAjBC,EAAiB,QACpBC,EAAKnB,EAAcxE,EAAEyE,SAASmB,QAAQF,EAAKjB,SAAS,KACpDoB,EAAKrB,EAAcxE,EAAEyE,SAASmB,QAAQF,EAAKjB,SAAS,KAEpDqB,GAAK,IAAI,QAAOC,eAAeL,EAAKb,MAAM,GAAG1B,OAAQuC,EAAKb,MAAM,GAAG1B,QACnE6C,GAAK,IAAI,QAAOD,eAAeL,EAAKb,MAAM,GAAG1B,OAAQuC,EAAKb,MAAM,GAAG1B,QACnE8C,EAAI,IAAI,OAEL,EAAI,EAAG,EAAInD,IAAc,EAAG,CACnCgD,EAAGI,MAAMF,EAAI,EAAIlD,EAAYmD,GAC7B,IAAME,EAAMR,EAAG1B,KAAKgC,EAAEG,MAAMV,EAAKb,MAAM,GAAG1B,OAAOe,MAAMrB,KACjDwD,EAAMR,EAAG5B,KAAKgC,EAAEG,MAAMV,EAAKb,MAAM,GAAG1B,OAAOe,MAAMrB,KAEvDiD,EAAGI,MAAMF,GAAK,EAAI,GAAKlD,EAAYmD,GACnC,IAAMK,EAAMX,EAAG1B,KAAKgC,EAAEG,MAAMV,EAAKb,MAAM,GAAG1B,OAAOe,MAAMrB,KACjD0D,EAAMV,EAAG5B,KAAKgC,EAAEG,MAAMV,EAAKb,MAAM,GAAG1B,OAAOe,MAAMrB,KAEvDiD,EAAGI,MAAMF,GAAK,EAAI,IAAOlD,EAAYmD,GACrC,IAAM9C,EAAS8C,EAAEG,MAAMV,EAAKb,MAAM,GAAG1B,QAErCmB,EAASzF,KAAKiF,EAAQ,CAACqC,EAAKE,EAAKE,EAAKD,GAAMnD,GAAQuB,KAAI,SAAAzC,GAAC,MAAI,CAACA,EAAG,IAAI,OAAQ,GAAK,SAClFsC,EAAW1F,KAAKsE,IApEU,8BAwE9B,IAxE8B,eAwErB9E,GACP,IAzE4B,EAyEtBmI,EAAQxG,EAAE6E,MAAMxG,GAAGoG,SAASC,KAAI,SAAAzC,GAAC,OAAIuC,EAAcxE,EAAEyE,SAASmB,QAAQ3D,IAAIgC,KAAKjE,EAAE6E,MAAMxG,GAAG8E,OAAOe,MAAMrB,OACvG4D,EAAM3C,EAAQ0C,EAAOxG,EAAE6E,MAAMxG,GAAG8E,QAEhCa,EAAS,IAAI,OA5ES,iBA6EZyC,GA7EY,IA6E5B,gCAAW,EAAX,QAAqBzC,EAAOC,KAAK,EAAGD,IA7ER,8BA8E5BA,EAAOE,MAAM,EAAIuC,EAAIlI,OAAQyF,GAE7B,IAhF4B,EAgFtB0C,EAAKD,EAAI,GAAGpD,KAAKW,GAAQ2C,OACzBC,EAAKF,EAAG7C,MAAM7D,EAAE6E,MAAMxG,GAAG8E,QAEzB0D,EAAUJ,EAAI/B,KAAI,SAAAzE,GACtB,IAAM6G,EAAO7G,EAAEoD,KAAKW,GACdc,EAAIgC,EAAKpD,IAAIkD,GACb7B,EAAI+B,EAAKpD,IAAIgD,GAEnB,MAAO,CAACzG,EAAG,IAAI,OAAQ6E,EAAGC,OAGtBvB,EAAMqD,EAAQ7E,QAAO,SAACwB,EAAKvB,GAAN,OAAY,IAAI,OAAQM,KAAKiB,IAAIA,EAAIsB,EAAG7C,EAAE,GAAG6C,GAAIvC,KAAKiB,IAAIA,EAAIuB,EAAG9C,EAAE,GAAG8C,MAAK,IAAI,QACpGtB,EAAMoD,EAAQ7E,QAAO,SAACyB,EAAKxB,GAAN,OAAY,IAAI,OAAQM,KAAKkB,IAAIA,EAAIqB,EAAG7C,EAAE,GAAG6C,GAAIvC,KAAKkB,IAAIA,EAAIsB,EAAG9C,EAAE,GAAG8C,MAAK,IAAI,QAEpGgC,EAAQxE,KAAKkB,KAAKD,EAAIsB,GAAItB,EAAIuB,EAAGtB,EAAIqB,EAAGrB,EAAIsB,GA9FtB,iBAgGZ8B,GAhGY,IAgG5B,2BAAyB,KAAdxG,EAAc,QACvBA,EAAE,GAAG2G,eAAe,EAAID,GACxB1G,EAAE,GAAGyE,GAAKzE,EAAE,GAAGyE,EAAI,EAAI,GAAMzG,GAAK2B,EAAE6E,MAAMtG,OAC1C8B,EAAE,GAAG0E,EAAI1E,EAAE,GAAG0E,EAAI,EAAI,IAnGI,8BAsG5BT,EAASzF,KAAKgI,GACdtC,EAAW1F,KAAKmB,EAAE6E,MAAMxG,GAAG8E,SA/BpB9E,EAAI,EAAGA,EAAI2B,EAAE6E,MAAMtG,SAAUF,EAAG,EAAhCA,GAuCT,IALA,IAAM4I,EAA0B,GAC1BC,EAA0B,GAC1BC,EAAyB,GACzBC,EAAuB,GAEpB,EAAI,EAAG,EAAI9C,EAAS/F,SAAU,EAAG,CACxC,IADwC,EAClC8I,EAAKH,EAAc3I,OAAS,EADM,iBAGlB+F,EAAS,IAHS,IAGxC,2BAAmC,iCAAvBrC,EAAuB,KAApBqF,EAAoB,KACjCJ,EAAcrI,KAAKoD,EAAE6C,EAAG7C,EAAE8C,EAAG9C,EAAE+C,GAC/BiC,EAAcpI,KAAKyI,EAAGxC,EAAGwC,EAAGvC,GAC5BoC,EAAatI,KAAK0F,EAAW,GAAGO,EAAGP,EAAW,GAAGQ,EAAGR,EAAW,GAAGS,IAN5B,8BASxCoC,EAAWvI,KAAKwI,EAAIA,EAAK,EAAGA,EAAK,GAC7B/C,EAAS,GAAG/F,QAAU,GAAG6I,EAAWvI,KAAKwI,EAAK,EAAGA,EAAK,EAAGA,EAAK,GAC9D/C,EAAS,GAAG/F,QAAU,GAAG6I,EAAWvI,KAAKwI,EAAK,EAAGA,EAAK,EAAGA,EAAK,GAGpE,IAAME,EAA+B,GAE/BC,EAAW,IAAI,OACrBA,EAASC,aAAa,WAAY,IAAI,OAAgB,IAAIC,aAAaR,GAAgB,IACvFM,EAASC,aAAa,SAAU,IAAI,OAAgB,IAAIC,aAAaP,GAAe,IACpFK,EAASC,aAAa,KAAM,IAAI,OAAgB,IAAIC,aAAaT,GAAgB,IACjFO,EAASG,SAASP,GAElBG,EAAW1I,KAAK2I,GArIc,uBAuIdhD,GAvIc,IAuI9B,2BAA+B,KAApB,EAAoB,QACvBoD,EAAS,IAAI,OAAe/E,GAClC+E,EAAOC,UAAU,EAAE/C,EAAG,EAAEC,EAAG,EAAEC,GAC7B,IAAM8C,EAAS,IAAI,OACnBA,EAAOlD,IAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxDgD,EAAOG,WAAWT,GAAGU,aAAaF,GAClCP,EAAW1I,KAAK+I,IA7IY,8BAgJ9B,OAAOL,GAIX,SAASU,EAAejI,GACtB,OAAO,IAAI,OAAiB,CAC1ByE,SAAUzE,EAAEyE,SAASC,KAAI,SAAAzC,GAAC,OAAIA,EAAEuD,SAChC0C,QAASlI,EAAE6E,MAAMH,KAAI,SAAAY,GAAC,OAAIA,EAAEnC,UAC5B0B,MAAO7E,EAAE6E,MAAMH,KAAI,SAAAY,GAAC,OAAIA,EAAEb,SAASC,KAAI,SAAAzC,GAAC,OAAIjC,EAAEyE,SAASmB,QAAQ3D,WAInE,SAASkG,EAAeC,EAAkBC,GAOxC,IANA,MAAiCA,EAAG,GAApC,oBAAOtE,EAAP,KAAkBuE,EAAlB,WAEM7D,EAAqB,GACrBgB,EAAgB,GAChBZ,EAAgB,GAEb0D,EAAK,EAAGA,EAAKxE,EAAOxF,SAAUgK,EAAI,CACzC,IAAMnF,EAAa,CACjBoC,MAAOzB,EAAOwE,GACd9C,MAAO,GACPZ,MAAO,IAGTJ,EAAS5F,KAAKuE,GAEd,IATyC,eAShCoF,GACP,IAAMlF,EAAKmB,EAAS+D,GAEdC,EAAWrF,EAAGoC,MAAMnC,KAAKC,EAAGkC,OAClC,GAAI8C,EAAYI,MAAK,SAAA3I,GAAC,OAAIwC,KAAKgD,IAAIxF,EAAI0I,EAASlK,UAAY,QAAO,CACjE,IAAMmH,EAAa,CACjBjB,SAAU,CAACrB,EAAIE,GACfuB,MAAO,IAGTzB,EAAGqC,MAAM5G,KAAK6G,GACdpC,EAAGmC,MAAM5G,KAAK6G,GACdD,EAAM5G,KAAK6G,KAZN8C,EAAK,EAAGA,EAAKD,IAAMC,EAAI,EAAvBA,GAiBX,SAASG,EAAUC,EAAgB1F,EAAgB2F,GACjD,IAAMC,EAAS,GACTC,EAAQ,CACZ,CAAC7F,EAAQ,KAGX,MAAO6F,EAAMxK,OAAS,EAAG,CACvB,IADuB,EACvB,EAAqBwK,EAAMC,MAA3B,sBAAOC,EAAP,KAAaC,EAAb,KADuB,iBAGJD,EAAKxD,OAHD,IAGvB,2BAA+B,KAApBC,EAAoB,QACvByD,EAAOjH,EAAKkH,YAAY1D,EAAMuD,GAChCC,EAAKG,SAAS3D,KAEdyD,GAAQP,EACVE,EAAOjK,KAAP,yBAAgBqK,GAAhB,CAAsBxD,KACbwD,EAAK3K,OAAS,EAAIsK,GAC3BE,EAAMlK,KAAK,CAACsK,EAAD,yBAAWD,GAAX,CAAiBxD,QAVT,+BAezB,OAAOoD,EAMT,IAHA,IAAMQ,EAAe,EAAI7D,EAAMlH,OAAS6J,EAElC9D,EAAW,GACjB,MAAgBG,EAAhB,eAA0B,CAArB,IAAMxC,EAAC,KACVqC,EAASzF,KAAT,MAAAyF,EAAQ,eAASqE,EAAU1G,EAAGA,EAAGqH,KAGnC,IAhEoF,iBAgE/E,IAhE+E,EAgEzEC,EAAS,KACZ3E,EAAM,IAAI4E,IAjEkE,iBAkElED,GAlEkE,IAkElF,kCAAWE,EAAX,yBAA2CA,EAAEhF,UAA7C,IAA2B,gCAAWlD,EAAX,QAA4BqD,EAAI8E,IAAInI,IAA/D,0BAAA+D,MAlEkF,8BAmElF,IAAMqE,EAAe,eAAI/E,GAEnBzB,EAAUwG,EAAa,GAAGnE,MAAMnC,KAAKsG,EAAa,GAAGnE,OAAQ3B,MAAM8F,EAAa,GAAGnE,MAAMnC,KAAKsG,EAAa,GAAGnE,QAAQmB,OAC5H,GAAI9B,EAAM+E,MAAK,SAAAtE,GAAC,OAAIA,EAAEnC,OAAO0G,aAAa1G,MAAU,iBAEpD,IAxEkF,EAwE5Ea,EAAS,IAAI,OAxE+D,iBAyElE2F,GAzEkE,IAyElF,gCAAW,EAAX,QAA8B3F,EAAOC,KAAK,EAAEuB,MAAOxB,IAzE+B,8BA4ElF,GAFAA,EAAOE,MAAM,EAAIyF,EAAapL,OAAQyF,GAElCA,EAAON,IAAIP,GAAU,EAAG,iBAE5B,IA9EkF,EA8E5E2G,EAAO,CACX3G,SACAsC,MAAO8D,EACP9E,SAAUkF,GAjFsE,iBAoFlEA,GApFkE,IAoFlF,gCAAW,EAAX,QAA8B,EAAE9E,MAAMhG,KAAKiL,IApFuC,qDAqFlEP,GArFkE,IAqFlF,gCAAW,EAAX,QAA2B,EAAE1E,MAAMhG,KAAKiL,IArF0C,8BAsFlFjF,EAAMhG,KAAKiL,IAtBb,MAAwBxF,EAAxB,eAAkC,IA0BlC,OADA,OAAAc,EAAA,MAAOK,EAAMJ,OAAM,SAAAoE,GAAC,OAAsB,GAAlBA,EAAE5E,MAAMtG,UAAc,aACvC,CAAEkG,WAAUgB,QAAOZ,SAG5B,SAASkF,EAAiB/J,EAAUqI,GAClC,OAAO,WACL,IAAM2B,EAASC,SAASC,cAAc,UACtCF,EAAOG,MAAyB,IAAjBnK,EAAE6E,MAAMtG,OACvByL,EAAOI,OAAS,IAEhB,IAAMC,EAAUL,EAAOM,WAAW,MAClC,OAAAlF,EAAA,MAAkB,MAAXiF,EAAiB,WAExBA,EAAQE,UAAY,OACpBF,EAAQG,SAAS,EAAG,EAAoB,IAAjBxK,EAAE6E,MAAMtG,OAAc,KAG7C8L,EAAQE,UAAY,OACpBF,EAAQI,UAAY,SACpBJ,EAAQK,aAAe,SAEvBrC,EAAGgC,GAAS,SAACM,EAAMb,EAAMc,EAAUC,GACjCR,EAAQxC,UAAU,IAAM,IAAMiC,EAAM,KACpCO,EAAQS,OAAOF,EAAWrI,KAAKG,IAC/B2H,EAAQxC,UAAU,EAAGgD,GACrBR,EAAQU,SAASJ,EAAM,EAAG,GAC1BN,EAAQW,oBAGV,IAAMC,EAAU,IAAI,OAAcjB,GAClC,OAAOiB,GAIX,SAASC,EAAUC,EAAcC,EAAcH,EAAwBzD,EAAsE1F,GAC3I,OAAO,SAACe,EAAkBC,GACxB,MAAO,CAAEqI,QAAOC,QAAOH,QAASA,IAAWzD,SAAUA,EAAS3E,EAAUC,GAAahB,aA7azF,SAAiBI,GACf,SAAgBkH,EAAYK,EAASxH,GACnC,OAAOwH,EAAEhF,SAAS,IAAMxC,EACpBwH,EAAEhF,SAAS,GACXgF,EAAEhF,SAAS,GAHD,EAAA2E,YAAW,GAD7B,CAAiBlH,MAAI,KAgCrB,SAAiBmJ,GACf,SAAgBC,EAAaC,GACf,IAAI,OAAe,CAC7BC,aAAAC,EACAC,eAAAC,IAFF,IAKMC,EAAY,IAAI,OAAqB,CACzClH,IAAK6G,EAAIN,QAETY,WAAW,EACXC,YAAY,EACZC,SAAS,EACTC,UAAW,GACXC,UAAW,GACXC,UAAW,EACXC,mBAAoB,GACpBC,aAAc,IAQV/K,GALY,IAAI,OAAqB,CACzCqD,IAAK6G,EAAIN,QACToB,aAAa,IAGA,IAAI,QAYnB,OANAhL,EAAOqI,IAAP,MAAArI,EAAM,eAAQkK,EAAI/D,SAAS9C,KAAI,SAAA4H,GAC7B,IAAMC,EAAO,IAAI,OAAKD,EAAGV,GAEzB,OADAW,EAAKC,YAAa,EACXD,OAGFlL,EAGT,SAAgBoL,EAAWlB,GACzB,OAAO,IAAI,OAAK,CACdmB,KAAM,EACNtB,MAAOG,EAAIH,QAIf,SAAgBnK,EAAOsK,GACrB,IAAMoB,EAAOF,EAAWlB,GAClBlK,EAASiK,EAAaC,GAE5B,MAAO,CAAEA,MAAKoB,OAAMtL,UAGtB,SAAgBuL,EAASvM,EAAcwM,GACrCxM,EAAEsM,KAAKG,SAAWD,EAAKC,SAASC,QAChC1M,EAAEsM,KAAKK,WAAaH,EAAKI,YAAYF,QACrC1M,EAAEsM,KAAKO,SAAWL,EAAKK,SAASH,QAChC1M,EAAEsM,KAAKQ,gBAAkBN,EAAKM,gBAAgBJ,QAGhD,SAAgBK,EAAO/M,GACrBA,EAAEgB,OAAOyL,SAASlI,IAChBvE,EAAEsM,KAAKG,SAAShI,EAChBzE,EAAEsM,KAAKG,SAAS/H,EAChB1E,EAAEsM,KAAKG,SAAS9H,GAGlB3E,EAAEgB,OAAO2L,WAAWpI,IAClBvE,EAAEsM,KAAKK,WAAWlI,EAClBzE,EAAEsM,KAAKK,WAAWjI,EAClB1E,EAAEsM,KAAKK,WAAWhI,EAClB3E,EAAEsM,KAAKK,WAAW1K,GAItB,SAAgB+K,EAAQhN,GACtB,IAAIiN,EAAOjN,EAAEsM,KAAKQ,gBAAgBI,gBAC9BL,EAAW7M,EAAEsM,KAAKO,SAASK,gBAC3BzD,EAAOzJ,EAAEkL,IAAIJ,MAAMtG,MAAM+E,MAAK,SAAAtE,GAAC,OAAIjF,EAAEsM,KAAKK,WAAW5G,MAAMd,EAAEnC,QAAQO,IAAI,OAAK8J,SAAW,OAE7F,OAAKnN,EAAEsM,KAAKc,MAAQ,OAAKC,QAAUJ,EAAO,MAAUJ,EAAW,YAAoBS,IAAT7D,EACjEA,EAEA,KAnFK,EAAAwB,aAAY,EAuCZ,EAAAmB,WAAU,EAOV,EAAAxL,OAAM,EAON,EAAA2L,SAAQ,EAOR,EAAAQ,OAAM,EAeN,EAAAC,QAAO,EA5EzB,CAAiB,MAAG,KAiZb,IAAMO,EAAUzF,EAAe,GAAG,SAAAjE,GACvC,IAAMwB,EAAe,GAARxB,EAAa,GAEpB8B,GAAK,IAAI,QAAO6H,iBAAiB,OAAKC,QAASvL,KAAKqB,MAAM,EAAI,IAC9DmK,GAAK,IAAI,QAAOF,iBAAiB,OAAKL,OAAkB,EAAVjL,KAAKG,GAAS,GAAGsL,KAAKhI,GACpEiI,GAAK,IAAI,QAAOJ,iBAAiB,OAAKL,OAAmB,GAAVjL,KAAKG,GAAS,GAAGsL,KAAKhI,GAErEkI,EAAM,OAAKV,OAAOtJ,MAAMwB,EAAOnD,KAAKC,KAAK,GAAK,GAE9CuB,EAAS,CACbmK,EACAlI,EAAGI,MAAM8H,GACTH,EAAG3H,MAAM8H,GACTD,EAAG7H,MAAM8H,IAGX,MAAO,CAACnK,EAAQ2B,MAGLyI,EAAUlG,EAAe2F,GAEzBQ,EAAYrE,EAAiB6D,GAAS,SAACS,EAAKvE,GACvDuE,EAAIC,KAAO,oBAEXxE,EAAK,IAAK,EAAG,GAAI,KACjBA,EAAK,IAAK,EAAG,EAAI,GAAI,KACrBA,EAAK,IAAK,EAAG,EAAI,GAAI,KAErBA,EAAK,IAAK,EAAG,GAAI,KACjBA,EAAK,IAAK,EAAG,EAAI,GAAI,KACrBA,EAAK,IAAK,EAAG,EAAI,GAAI,KAErBA,EAAK,IAAK,EAAG,GAAI,KACjBA,EAAK,IAAK,EAAG,EAAI,GAAI,KACrBA,EAAK,IAAK,EAAG,EAAI,GAAI,KAErBA,EAAK,IAAK,EAAG,GAAI,KACjBA,EAAK,IAAK,EAAG,EAAI,GAAI,KACrBA,EAAK,IAAK,EAAG,EAAI,GAAI,QAGVyE,EAAa3L,EAAkBgL,GAE/BY,EAAY,CAAC,EAAG,EAAG,EAAG,GAEtBC,EAAKvD,EAAU0C,EAASO,EAASC,EAAWG,EAAYC,GAExDE,EAAUvG,EAAe,GAAG,SAAAjE,GAIvC,IAHA,IAAMwB,EAAOxB,EAEPH,EAAS,GACN1F,EAAI,EAAGA,EAAI,IAAKA,EACvB0F,EAAOlF,KAAK,IAAI,OACT,EAAJR,EAAaqH,EAAO,GAAKA,EAAO,EAC5B,EAAJrH,EAAaqH,EAAO,GAAKA,EAAO,EAC5B,EAAJrH,EAAaqH,EAAO,GAAKA,EAAO,IAIrC,MAAO,CAAC3B,EAAQ2B,MAGLiJ,EAAU1G,EAAeyG,GAEzBE,EAAY7E,EAAiB2E,GAAS,SAACL,EAAKvE,GACvDuE,EAAIC,KAAO,oBAEXxE,EAAK,IAAK,EAAG,EAAI,EAAG,IACpBA,EAAK,IAAK,EAAG,EAAI,EAAG,IACpBA,EAAK,IAAK,EAAG,EAAI,EAAG,IAEpBA,EAAK,IAAK,EAAG,EAAI,EAAG,IACpBA,EAAK,IAAK,EAAG,EAAI,EAAG,IACpBA,EAAK,IAAK,EAAG,EAAI,EAAG,OAGT+E,EAAajM,EAAkB8L,GAE/BI,EAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAE5BC,EAAK7D,EAAUwD,EAASC,EAASC,EAAWC,EAAYC,GAExDE,EAAU7G,EAAe,GAAG,SAAAjE,GACvC,IAAMwB,EAAe,KAARxB,EAAe,GAEtBY,EAAIY,EAAOnD,KAAK0M,MAChBlL,EAAS,CACb,IAAI,QAAMe,EAAG,EAAG,GAChB,IAAI,QAAMA,EAAG,EAAG,GAChB,IAAI,OAAK,GAAIA,EAAG,GAChB,IAAI,OAAK,GAAIA,EAAG,GAChB,IAAI,OAAK,EAAG,GAAIA,GAChB,IAAI,OAAK,EAAG,GAAIA,IAGlB,MAAO,CAACf,EAAQ2B,MAGLwJ,EAAUjH,EAAe+G,GAEzBG,EAAYpF,EAAiBiF,GAAS,SAACX,EAAKvE,GACvDuE,EAAIC,KAAO,oBAEXxE,EAAK,IAAK,EAAG,EAAI,EAAG,GACpBA,EAAK,IAAK,EAAG,EAAI,EAAG,GACpBA,EAAK,IAAK,EAAG,EAAI,EAAG,GACpBA,EAAK,IAAK,EAAG,EAAI,EAAG,GAEpBA,EAAK,IAAK,EAAG,EAAI,EAAG,GACpBA,EAAK,IAAK,EAAG,EAAI,EAAG,GACpBA,EAAK,IAAK,EAAG,EAAI,EAAG,GACpBA,EAAK,IAAK,EAAG,EAAI,EAAG,MAGTsF,EAAaxM,EAAkBoM,GAE/BK,EAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAElCC,EAAKpE,EAAU8D,EAASE,EAASC,EAAWC,EAAYC,GAExDE,EAAWpH,EAAe,IAAI,SAAAjE,GACzC,IAAMsL,EAAQtL,EAERP,EAAkB,EAAVpB,KAAKG,GAAS,EACtB+M,EAAe,IAAVlN,KAAKG,GAEVgN,EAAKnN,KAAKE,IAAIgN,GAAMD,EACpBG,EAAKpN,KAAKI,IAAI8M,GAAMD,EAEpBI,EAAKrN,KAAKI,IAAIgB,EAAQ,GAAK+L,EAC3BG,EAAKtN,KAAKuN,KAAKF,EAAKD,GACpBI,EAAKxN,KAAKG,GAAK+M,EAAKI,EAEpBG,EAAaR,EAAQjN,KAAKE,IAAIoN,GAC9BzF,EAAS4F,EAAazN,KAAKE,IAAIsN,GAE/BE,EAAY1N,KAAKC,KAAK4H,EAASA,EAAS,EAAIoF,EAAQA,EAAQpF,EAASoF,EAAQjN,KAAKI,IAAI8M,IACtFS,EAAY3N,KAAK4N,KAAKX,EAAQjN,KAAKE,IAAIgN,GAAMQ,GAC7CG,EAAY7N,KAAKG,GAAK,EAAIwN,EAE1BpK,GAAK,IAAI,QAAO+H,iBAAiB,OAAKL,OAAQ7J,GAC9CqC,GAAK,IAAI,QAAO6H,iBAAiB,OAAKC,OAAQsC,GAE9CC,EAAO,OAAK7C,OAAOtJ,MAAMkG,EAAS,GAClC8D,EAAM,OAAKoC,OAAOpM,MAAM+L,GAExBlM,EAAS,CACbsM,EACArK,EAAGI,MAAM8H,GACTpI,EAAGM,MAAMJ,EAAGI,MAAM8H,IAClBpI,EAAGM,MAAMN,EAAGM,MAAMJ,EAAGI,MAAM8H,KAC3BpI,EAAGM,MAAMN,EAAGM,MAAMN,EAAGM,MAAMJ,EAAGI,MAAM8H,MACpCpI,EAAGM,MAAMN,EAAGM,MAAMN,EAAGM,MAAMN,EAAGM,MAAMJ,EAAGI,MAAM8H,OAC7CmC,EAAKE,SACLvK,EAAGI,MAAM8H,EAAIqC,UACbzK,EAAGM,MAAMJ,EAAGI,MAAM8H,EAAIqC,WACtBzK,EAAGM,MAAMN,EAAGM,MAAMJ,EAAGI,MAAM8H,EAAIqC,YAC/BzK,EAAGM,MAAMN,EAAGM,MAAMN,EAAGM,MAAMJ,EAAGI,MAAM8H,EAAIqC,aACxCzK,EAAGM,MAAMN,EAAGM,MAAMN,EAAGM,MAAMN,EAAGM,MAAMJ,EAAGI,MAAM8H,EAAIqC,eAGnD,MAAO,CAACxM,EAAQA,EAAO,GAAGV,KAAKU,EAAO,IAAIxF,SAAUwF,EAAO,GAAGV,KAAKU,EAAO,IAAIxF,aAGnEiS,EAAWvI,EAAesH,GAE1BkB,EAAa1G,EAAiBwF,GAAU,SAAClB,EAAKvE,GACzDuE,EAAIC,KAAO,oBAEXxE,EAAK,IAAK,EAAG,EAAG,GAChBA,EAAK,IAAK,EAAG,EAAG,GAChBA,EAAK,IAAK,EAAG,EAAG,GAChBA,EAAK,IAAK,EAAG,EAAG,GAChBA,EAAK,IAAK,EAAG,EAAG,GAEhBA,EAAK,IAAK,EAAG,EAAG,GAChBA,EAAK,IAAK,EAAG,EAAG,GAChBA,EAAK,IAAK,EAAG,EAAG,GAChBA,EAAK,IAAK,EAAG,EAAG,GAChBA,EAAK,KAAM,EAAG,EAAG,MAGN4G,EAAc9N,EAAkB2M,GAEhCoB,EAAa,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAE1CC,EAAM1F,EAAUqE,EAAUiB,EAAUC,EAAYC,EAAaC,GAE7DE,EAAW1I,EAAe,IAAI,SAAAjE,GA8BzC,IA7BA,IAAMwB,EAAe,GAARxB,EACP4M,GAAO,EAAIvO,KAAKC,KAAK,IAAM,EAE3BuB,EAAS,CACb,IAAI,OAAK,EAAG,EAAG,GACf,IAAI,QAAM,EAAG,EAAG,GAChB,IAAI,OAAK,GAAI,EAAG,GAChB,IAAI,OAAK,EAAG,GAAI,GAChB,IAAI,QAAM,GAAI,EAAG,GACjB,IAAI,OAAK,GAAI,GAAI,GACjB,IAAI,QAAM,EAAG,GAAI,GACjB,IAAI,QAAM,GAAI,GAAI,GAElB,IAAI,OAAK,EAAG+M,EAAK,EAAIA,GACrB,IAAI,OAAK,GAAIA,EAAK,EAAIA,GACtB,IAAI,OAAK,EAAGA,GAAM,EAAIA,GACtB,IAAI,OAAK,GAAIA,GAAM,EAAIA,GAEvB,IAAI,OAAK,EAAIA,EAAK,EAAGA,GACrB,IAAI,OAAK,EAAIA,EAAK,GAAIA,GACtB,IAAI,QAAM,EAAIA,EAAK,EAAGA,GACtB,IAAI,QAAM,EAAIA,EAAK,GAAIA,GAEvB,IAAI,OAAKA,EAAK,EAAIA,EAAK,GACvB,IAAI,QAAMA,EAAK,EAAIA,EAAK,GACxB,IAAI,OAAKA,GAAM,EAAIA,EAAK,GACxB,IAAI,QAAMA,GAAM,EAAIA,EAAK,IAG3B,MAAoB/M,EAApB,gBAAK,IAAMyB,EAAK,KAAYA,EAAMtB,MAAMwB,EAAOoL,EAAM,EAAGtL,GAExD,MAAO,CAACzB,EAAQ2B,MAGLqL,EAAW9I,EAAe4I,GAE1BG,EAAcpO,EAAkBiO,GAEhCI,EAAalH,EAAiB8G,GAAU,SAACxC,EAAKvE,GACzDuE,EAAIC,KAAO,oBAEXxE,EAAK,IAAK,EAAG,EAAG,IAChBA,EAAK,IAAK,EAAG,IAAO,IACpBA,EAAK,IAAK,EAAG,GAAO,IACpBA,EAAK,IAAK,EAAG,EAAG,IAChBA,EAAK,IAAK,EAAG,IAAO,IACpBA,EAAK,IAAK,EAAG,IAAO,IAEpBA,EAAK,IAAK,EAAG,IAAO,IACpBA,EAAK,IAAK,EAAG,IAAO,IACpBA,EAAK,IAAK,EAAG,GAAO,IACpBA,EAAK,KAAM,GAAI,GAAO,IACtBA,EAAK,KAAM,EAAG,IAAO,IACrBA,EAAK,KAAM,GAAI,IAAO,OAGXoH,GAAa,CAAC,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAElDC,GAAMjG,EAAU2F,EAAUE,EAAUE,EAAYD,EAAaE,IAE7DE,GAAWjJ,EAAe,IAAI,SAAAjE,GAqBzC,IApBA,IAAMwB,EAAe,GAARxB,EACP4M,GAAO,EAAIvO,KAAKC,KAAK,IAAM,EAE3BuB,EAAS,CACb,IAAI,OAAK,EAAG,EAAG+M,GACf,IAAI,OAAK,GAAI,EAAGA,GAChB,IAAI,OAAK,EAAG,GAAIA,GAChB,IAAI,OAAK,GAAI,GAAIA,GAEjB,IAAI,OAAK,EAAGA,EAAK,GACjB,IAAI,QAAM,EAAGA,EAAK,GAClB,IAAI,OAAK,GAAIA,EAAK,GAClB,IAAI,QAAM,GAAIA,EAAK,GAEnB,IAAI,OAAKA,EAAK,EAAG,GACjB,IAAI,OAAKA,EAAK,GAAI,GAClB,IAAI,QAAMA,EAAK,EAAG,GAClB,IAAI,QAAMA,EAAK,GAAI,IAGrB,MAAoB/M,EAApB,gBAAK,IAAMyB,EAAK,KAAYA,EAAMtB,MAAMwB,EAAO,EAAGF,GAElD,MAAO,CAACzB,EAAQ,GAAI2B,MAGT2L,GAAWpJ,EAAemJ,IAE1BE,GAAc1O,EAAkBwO,IAEhCG,GAAaxH,EAAiBqH,IAAU,SAAC/C,EAAKvE,GACzDuE,EAAIC,KAAO,oBAEXxE,EAAK,IAAK,EAAG,EAAG,IAChBA,EAAK,IAAK,GAAI,EAAG,IACjBA,EAAK,IAAK,EAAG,EAAI,EAAG,IACpBA,EAAK,IAAK,GAAI,EAAI,EAAG,IACrBA,EAAK,IAAK,GAAI,EAAG,IACjBA,EAAK,IAAK,EAAG,EAAG,IAChBA,EAAK,IAAK,EAAG,EAAI,EAAG,IACpBA,EAAK,IAAK,GAAI,EAAI,EAAG,IACrBA,EAAK,IAAK,EAAG,EAAI,EAAG,IACpBA,EAAK,KAAM,GAAI,EAAG,IAElBA,EAAK,KAAM,GAAI,EAAG,IAClBA,EAAK,KAAM,EAAG,EAAI,EAAG,IACrBA,EAAK,KAAM,GAAI,EAAI,EAAG,IACtBA,EAAK,KAAM,GAAI,EAAI,EAAG,IACtBA,EAAK,KAAM,GAAI,EAAG,IAClBA,EAAK,KAAM,EAAG,EAAG,IACjBA,EAAK,KAAM,EAAG,EAAI,EAAG,IACrBA,EAAK,KAAM,EAAG,EAAI,EAAG,IACrBA,EAAK,KAAM,EAAG,EAAI,EAAG,IACrBA,EAAK,KAAM,GAAI,EAAG,OAGP0H,GAAa,CAAC,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,IAEjFC,GAAMvG,EAAUkG,GAAUC,GAAUE,GAAYD,GAAaE,IGhuB1E,SAASE,KACP,MAAO,CACLjD,GAAIA,EAAG,IAAM,IACbM,GAAIA,EAAG,IAAM,IACbO,GAAIA,EAAG,IAAM,IACbsB,IAAKA,EAAI,IAAM,IACfO,IAAKA,GAAI,IAAM,IACfM,IAAKA,GAAI,IAAM,KAInB,SAASE,GAAQ7E,GACf,IAAMG,EAAc9K,EAAiBI,KAAKH,QAEpCwP,EAASrP,KAAKH,SAAWG,KAAKG,GAAK,EACnCwK,EAAW,IAAI,OAAK3K,KAAKI,IAAIiP,GAAS,EAAGrP,KAAKE,IAAImP,IAAS1N,MAAM,GACpED,KAAK,IAAI,OAAK,EAAG,EAAG,IAEjB4N,EAAU1P,EAAiBI,KAAKH,QAChC+K,EAAkB0E,EAAQzL,MAAM,OAAKoH,OAAOtJ,MAAM,KAExD,MAAO,CACL4I,WACAG,cACAC,WACAC,mBAIJ,SAAS2E,GAAU9H,GACjB,IAAM+H,EAAQ,IAAI,OACZC,EAAS,IAAI,QAAoBhI,EAAOG,MAAQ,IAAKH,EAAOG,MAAQ,IAAKH,EAAOI,OAAS,KAAMJ,EAAOI,OAAS,KACrH4H,EAAOlF,SAASlI,IAAI,EAAG,IAAK,GAC5BoN,EAAOC,OAAO,EAAG,EAAG,GAEpB,IAAMC,EAAW,IAAI,OAAc,CACjClI,SACAmI,OAAO,EACPC,WAAW,IAEbF,EAASG,UAAUC,SAAU,EAC7BJ,EAASG,UAAU5E,KAAO,OAE1B,IAAM8E,EAAe,IAAI,OAAa,SAAU,IAChDR,EAAMrI,IAAI6I,GAEV,IAAMC,EAAejQ,KAAKC,KAAKwP,EAAOS,MAAQT,EAAOS,MAAQT,EAAOU,IAAMV,EAAOU,KAE3EC,EAAoB,IAAI,OAAiB,SAAU,IACzDA,EAAkB7F,SAASlI,IAAI,EAAG,GAAI,GACtC+N,EAAkBC,OAAOC,QAAQ1I,MAAQ,EAAIH,EAAOG,MACpDwI,EAAkBC,OAAOC,QAAQzI,OAAS,EAAIJ,EAAOI,OACrDuI,EAAkBC,OAAOZ,OAAOc,MAAQ,EAAIN,EAC5CG,EAAkBC,OAAOZ,OAAOe,IAAM,EAAIP,EAC1CG,EAAkBC,OAAOZ,OAAOU,IAAMF,EACtCG,EAAkBC,OAAOZ,OAAOgB,QAAUR,EAC1CG,EAAkBC,OAAOZ,OAAOiB,MAAQT,EACxCG,EAAkBC,OAAOZ,OAAOS,MAAQD,EACxCG,EAAkBnG,YAAa,EAC/BuF,EAAMrI,IAAIiJ,GAEV,IAAMO,EAAgB,IAAI,OAAc,EAAIlB,EAAOS,MAAO,EAAIT,EAAOU,KAC/DS,EAAgB,IAAI,OAAe,CAAEC,QAAS,KAC9CC,EAAQ,IAAI,OAAKH,EAAeC,GAMtC,OALAE,EAAMC,SAAS/Q,KAAKG,GAAK,GACzB2Q,EAAM7G,YAAa,EACnB6G,EAAME,eAAgB,EACtBxB,EAAMrI,IAAI2J,GAEH,CAAEtB,QAAOC,SAAQE,YAG1B,SAASsB,GAAUC,GACjB,IAAMC,EAAQ,IAAI,OAAM,CACtBC,QAAS,IAAI,OAAK,GAAI,GAAI,KAGtBC,EAAe,IAAI,OACnBC,EAAgB,IAAI,OAEpBC,EAAQ,IAAI,OAAK,CACrBrG,KAAM,OAAKC,OACXtC,MAAO,IAAI,OACX0B,SAAU,IAAI,OAAK,EAAG,EAAG,GACzBE,YAAY,IAAI,QAAOjH,eAAe,OAAK+H,OAAQ,OAAKN,QACxDuG,SAAUF,IAGNG,EAAQ,CACZ,IAAI,OAAK,CACPvG,KAAM,OAAKC,OACXtC,MAAO,IAAI,OACX0B,SAAU,IAAI,QAAM2G,EAAS3O,EAAI,EAAG,EAAG,GACvCkI,YAAY,IAAI,QAAOjH,eAAe,OAAK+H,OAAQ,OAAKwC,QACxDyD,SAAUH,IAEZ,IAAI,OAAK,CACPnG,KAAM,OAAKC,OACXtC,MAAO,IAAI,OACX0B,SAAU,IAAI,QAAM2G,EAAS3O,EAAI,EAAG,EAAG,GACvCkI,YAAY,IAAI,QAAOjH,eAAe,OAAK+H,OAAQ,OAAKwC,OAAOC,UAC/DwD,SAAUH,IAEZ,IAAI,OAAK,CACPnG,KAAM,OAAKC,OACXtC,MAAO,IAAI,OACX0B,SAAU,IAAI,OAAK,EAAG,GAAI2G,EAAS1O,EAAI,GACvCiI,YAAY,IAAI,QAAOjH,eAAe,OAAK+H,OAAQ,OAAKA,QACxDiG,SAAUH,IAEZ,IAAI,OAAK,CACPnG,KAAM,OAAKC,OACXtC,MAAO,IAAI,OACX0B,SAAU,IAAI,OAAK,EAAG,GAAI2G,EAAS1O,EAAI,GACvCiI,YAAY,IAAI,QAAOjH,eAAe,OAAK+H,OAAQ,OAAKA,OAAOyC,UAC/DwD,SAAUH,KAIdF,EAAMO,QAAQH,GACd,cAAmBE,EAAnB,gBAAK,IAAMrH,EAAI,KAAW+G,EAAMO,QAAQtH,GAMxC,OAJA+G,EAAMQ,mBAAmB,IAAI,OAAgBR,EAAMS,gBAAiBP,EAAc,CAAEQ,SAAU,KAC9FV,EAAMQ,mBAAmB,IAAI,OAAgBR,EAAMS,gBAAiBN,EAAe,CAAEO,SAAU,OAC/FV,EAAMQ,mBAAmB,IAAI,OAAgBR,EAAMS,gBAAiBT,EAAMS,gBAAiB,CAAEC,SAAU,KAEhG,CAAEV,QAAOM,QAAOF,SAGnB,SAAUO,GAAerK,EAA2BlI,GACxD,IAAMwS,EAAO5C,KAEP6C,EAAMvK,EAAOwK,wBACnBxK,EAAOG,MAAQoK,EAAIpK,MACnBH,EAAOI,OAASmK,EAAInK,OAEpB,MAAoC0H,GAAU9H,GAAtC+H,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAAQE,EAAvB,EAAuBA,SACjBuB,EAAW,IAAI,OAAuB,EAAfzB,EAAOS,MAAwB,EAAbT,EAAOU,KACtD,EAAgCc,GAAUC,GAAlCC,EAAR,EAAQA,MAAOI,EAAf,EAAeA,MAAOE,EAAtB,EAAsBA,MAIhBS,EAAuB,GAEvBC,EAAUC,QAAQC,QAAQN,GAAM5P,KAAI,SAAAmQ,GAAC,OAAIP,EAAKO,MAC9CC,EAAUJ,EAAQhQ,KAAI,SAAC6G,EAAKlN,GAChC,IAAMyO,EAAW,IAAI,QAClB2G,EAAS3O,EAAI,EAAI,GAClB,GAAMzG,EAAI,GAAOqW,EAAQnW,OAAS,IAG9B8C,EAAS,EAAIiK,aAAaC,GAChClK,EAAOyL,SAASlI,IAAIkI,EAAShI,EAAG,GAAIgI,EAAS/H,GAC7C1D,EAAO6C,MAAMU,IAAI,GAAK,GAAK,IAE3B,IAVqC,EAU/BgG,GAAW,IAAI,QAAamK,mBAChC,IAAI,OAAQxJ,EAAIJ,MAAMtG,MAAM,GAAG1B,OAAO2B,EAAGyG,EAAIJ,MAAMtG,MAAM,GAAG1B,OAAO4B,EAAGwG,EAAIJ,MAAMtG,MAAM,GAAG1B,OAAO6B,GAChG,IAAI,OAAQ,GAAI,EAAG,IAGfhB,EAAS,IAAI,OAfkB,iBAgBrBuH,EAAIJ,MAAMtG,MAAM,GAAGJ,UAhBE,IAgBrC,gCAAWxC,EAAX,QAA6C+B,EAAOC,KAAKhC,EAAEuD,MAAOxB,IAhB7B,8BAiBrCA,EAAOE,MAAM,EAAIqH,EAAIJ,MAAMtG,MAAM,GAAGJ,SAASlG,OAAQyF,GAErD,IAAMK,EAAI,IAAI,OACdA,EAAE2Q,KAAKzJ,EAAIJ,MAAMtG,MAAM,GAAGJ,SAAS,GAAGe,OACtCnB,EAAE4Q,IAAIjR,GACNK,EAAE6Q,YACF7Q,EAAE8Q,gBAAgBvK,GAElB,IAAM3E,EAAI,IAAI,OAcd,OAb8B,GAA1BsF,EAAIJ,MAAMtG,MAAMtG,OAClB0H,EAAE4H,iBAAiB,IAAI,OAAQ,EAAG,EAAG,GAAc,EAAVtL,KAAKG,GAAS,GAEtB,GAA1B6I,EAAIJ,MAAMtG,MAAMtG,QACvB0H,EAAE4H,iBAAiB,IAAI,OAAQ,EAAG,EAAG,GAAc,EAAVtL,KAAKG,GAAS,GAEzDuD,EAAEmP,UAAS,IAAI,QAAaL,mBAAmB1Q,EAAG,IAAI,OAAQ,EAAG,EAAG,KACpE4B,EAAEmP,SAASxK,GACX3E,EAAEiP,YAEF7T,EAAO2L,WAAWgI,KAAK/O,GACvB8L,EAAMrI,IAAIrI,GAEH,CACLkK,MACAlK,SACAyL,WACAG,YAAahH,EACb2E,SAAU,MAId,SAASyK,EAAQvQ,EAAWC,GAC1B,IADmC,EAC7BuQ,EAAM,IAAI,QACbxQ,EAAIkF,EAAOG,MAAQ,IAAOsJ,EAAS3O,GACnCC,EAAIiF,EAAOI,OAAS,IAAOqJ,EAAS1O,GAGjC8F,EAAS,IAAI,OANgB,iBAOdiK,GAPc,IAOnC,2BAA8B,KAAnBS,EAAmB,QAI5B,GAHA1K,EAAOmK,KAAKM,GACZzK,EAAOoK,IAAIM,EAAOzI,UAEdjC,EAAOtM,SAAW,GACpB,OAAOgX,GAZwB,8BAgBnC,OAAO,KAGT,SAAS7L,EAAI6B,EAAUuB,GACrB,IAAMzM,EAAI,EAAIY,OAAOsK,GACrBkJ,EAAQ5V,KAAKwB,GACb0R,EAAMrI,IAAIrJ,EAAEgB,QACZqS,EAAMO,QAAQ5T,EAAEsM,MAEhB,IAAME,EAAO8E,GAAQ7E,GACrB,EAAIF,SAASvM,EAAGwM,GAChB,EAAIO,OAAO/M,GAGb,IAAImV,EAAyB,KAC7B,SAASC,EAAahM,GACpB+L,EAAUH,EAAQ5L,EAAEiM,QAASjM,EAAEkM,SAGjC3L,EAAO4L,iBAAiB,aAAcH,GACtCzL,EAAO4L,iBAAiB,aAAcH,GACtCzL,EAAO4L,iBAAiB,YAAaH,GAErCzL,EAAO4L,iBAAiB,SAAS,SAAAnM,GAC/B,IAAMoM,EAAOR,EAAQ5L,EAAEiM,QAASjM,EAAEkM,SAClC,GAAY,MAARE,EAAJ,CAEA,IAAKC,EAAQ,wBACKrB,GADL,IACX,2BAAyB,KAAdpU,EAAc,QACvB0R,EAAMgE,OAAO1V,EAAEgB,QACfqS,EAAMsC,WAAW3V,EAAEsM,OAHV,8BAMX8H,EAAQlW,OAAS,EACjBuD,EAAQlB,MAAQ,KAGlBkV,GAAS,EACTpM,EAAImM,EAAKtK,IAAK,IAAI,OAAKsK,EAAKxU,OAAOyL,SAAShI,EAAG,EAAG+Q,EAAKxU,OAAOyL,SAAS9H,QAGzE,IAAI8Q,GAAS,EACb,SAASG,IACPjM,EAAOkM,MAAMC,OAASX,EAAU,UAAY,UAE5C,IAHa,EAGPY,EAAO,IAAI,OAAQ,EAAG,GAAI,GAAGlB,YAHtB,iBAIQJ,GAJR,IAIb,2BAA8B,KAAnBS,EAAmB,QAC5B,GAAIA,GAAUC,GAAWD,EAAO3K,SAAW,IAAM,EAAG,CAC9C2K,GAAUC,EACZD,EAAO3K,UAAY,EACZ2K,EAAO3K,SAAW,IAAM2K,EAAO3K,SAAW,EACjD2K,EAAO3K,SAAW,EACX2K,EAAO3K,SAAW,GACzB2K,EAAO3K,UAAY,EAEnB2K,EAAO3K,UAAY,EAErB2K,EAAO3K,UAAY,GAEnB,IAAM3E,GAAI,IAAI,QAAa4H,iBAAiBuI,EAAMb,EAAO3K,SAAWrI,KAAKG,GAAK,IAC9EuD,EAAEmP,SAASG,EAAOtI,aAClBhH,EAAEiP,YACFK,EAAOlU,OAAO2L,WAAWgI,KAAK/O,QAE9BsP,EAAOlU,OAAO2L,WAAWgI,KAAKO,EAAOtI,aAGvCsI,EAAOlU,OAAOgV,gBAzBH,8BA4Bb,GAAIP,EAAQ,CACVpC,EAAM4C,KAAK,EAAI,IADL,uBAGM7B,GAHN,IAGV,2BAAyB,KAAdpU,EAAc,QACvB,EAAI+M,OAAO/M,GACP,EAAIgN,QAAQhN,KACdA,EAAEsM,KAAKc,KAAO,OAAKC,SANb,8BAUV,IAVU,EAUJ6I,EAAuB,GACvBC,EAAQ9C,EAAM+C,SAAS/R,KAAI,SAAAzE,GAAC,MAAI,CAACA,EAAEyW,GAAIzW,EAAE0W,OACzCC,EAAWrU,KAAKiB,IAAI,IAAK,GAAKkQ,EAAMmD,MAZhC,iBAcWL,GAdX,qDAcEpS,EAdF,KAcKC,EAdL,KAeR,GAAID,GAAK0P,GAASzP,GAAKyP,EAAO,iBAC9B,GAAIyC,EAAK7N,MAAK,SAAAzI,GAAC,OAAImE,GAAKnE,EAAE,IAAMoE,GAAKpE,EAAE,IAAMoE,GAAKpE,EAAE,IAAMmE,GAAKnE,EAAE,MAAK,iBAGtE,GAFAsW,EAAK1X,KAAK,CAACuF,EAAGC,IAEV2P,EAAM3K,SAASjF,IAAM4P,EAAM3K,SAAShF,GAAI,CAC1C,MAAoB2P,EAAM3K,SAASjF,GAAK,CAACC,EAAGD,GAAK,CAACA,EAAGC,GAArD,sBAAOkH,EAAP,KAAYuL,EAAZ,KACM3T,EAAS2T,EAAK9J,WAAW5G,MAAM,OAAK0H,QAC1CvC,EAAIwL,WAAW5T,EAAOe,MAAM0S,QACvB,CACL,IAAMI,EAAM5S,EAAE0I,SAASzJ,KAAKgB,EAAEyI,UAAUnG,OACxCvC,EAAE2S,WAAWC,EAAI9S,MAAM0S,EAAW,IAClCvS,EAAE0S,WAAWC,EAAI9S,OAAO0S,EAAW,MAZvC,2BAA4B,IAdlB,8BA8BVd,EAASrB,EAAQ/L,MAAK,SAAArI,GAAC,OAAIA,EAAEsM,KAAKc,MAAQ,OAAKC,UAE1CoI,IACHhU,EAAQlB,MAAQ6T,EAAQ/P,KAAI,SAAArE,GAAC,OAAIA,EAAEkL,IAAIzJ,QAAQzB,EAAEkL,IAAIJ,MAAMtG,MAAMe,QAAQ,EAAIyH,QAAQhN,SAOzF6R,EAAS+D,OAAOlE,EAAOC,GACvBiF,sBAAsBhB,GAGxBgB,sBAAsBhB,GJzUT,QACb9V,KAAM,WACN+W,MAFa,SAEPC,GACJ,IAAMnN,EAAS,eAAW,MACpBlI,EAAU,eAAW,MAO3B,OALA,eAAMkI,GAAQ,SAAAA,GACZqK,GAAerK,EAAQlI,MAIlB,CACLkI,SACAlI,a,8CKvBN,MAAMsV,GAA2B,KAAgB,GAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAE1E,UCNTC,GAAM,eAAU,IACtBA,GAAIC,MAAM","file":"js/index.29f84d54.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"index\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./main.vue?vue&type=style&index=1&id=394eaa74&lang=scss\"","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./main.vue?vue&type=style&index=0&id=394eaa74&lang=scss&scoped=true\"","<template>\n  <span class=\"fontloader\">test</span>\n\n  <canvas ref=\"canvas\" />\n\n  <span class=\"results\" v-if=\"results\">\n    {{ results.join(\" + \") }}\n    <template v-if=\"results.length > 1\">\n      = {{ results.reduce((s, v) => s + v, 0) }}\n    </template>\n  </span>\n</template>\n\n<script>\nimport { shallowRef, watch } from 'vue';\n\nimport { initDiceRoller, initDiceInspector } from './diceroll';\n\nexport default {\n  name: 'dnd-dice',\n  setup(props) {\n    const canvas = shallowRef(null);\n    const results = shallowRef(null);\n\n    watch(canvas, canvas => {\n      initDiceRoller(canvas, results);\n      // initDiceInspector(canvas);\n    });\n\n    return {\n      canvas,\n      results,\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.fontloader {\n  font-family: Roboto;\n  font-weight: bold;\n  position: absolute;\n  opacity: 0;\n}\n\ncanvas {\n  width: 100vw;\n  height: 100vh;\n  font-family: Roboto;\n}\n\n.results {\n  position: absolute;\n  top: 0;\n  left: 0;\n  padding: 1em;\n\n  font-size: 2em;\n  font-weight: bold;\n  font-family: Roboto;\n  text-shadow: 0 0 3px currentColor, 0 0 20px white, 0 0 20px white,\n    0 0 20px white, 0 0 20px white, 0 0 20px white, 0 0 20px white,\n    0 0 20px white, 0 0 20px white, 0 0 20px white, 0 0 20px white,\n    0 0 20px white, 0 0 20px white;\n}\n</style>\n\n<style lang=\"scss\">\nbody {\n  margin: 0;\n  overflow: hidden;\n}\n</style>\n","import { assert } from '@mfro/ts-common/assert';\nimport { Vec3, Quaternion as Quat, ConvexPolyhedron, Shape, Body } from 'cannon-es';\nimport { BufferGeometry, Object3D, Vector2, BufferAttribute, SphereGeometry, Matrix4, Texture, CanvasTexture, MeshStandardMaterial, Matrix3, Vector3, Group, Mesh, ShaderMaterial, UniformsLib, MeshPhysicalMaterial } from 'three';\n\nimport vertexShader from './shaders/vertex.glsl';\nimport fragmentShader from './shaders/fragment.glsl';\n\ntype Random = () => number;\n\nexport interface Vertex {\n  point: Vec3;\n  edges: Edge[];\n  faces: Face[];\n}\n\nexport interface Edge {\n  vertices: [Vertex, Vertex];\n  faces: [Face, Face];\n}\n\nexport namespace Edge {\n  export function otherVertex(e: Edge, v: Vertex) {\n    return e.vertices[1] == v\n      ? e.vertices[0]\n      : e.vertices[1];\n  }\n}\n\nexport interface Face {\n  vertices: Vertex[];\n  edges: Edge[];\n  normal: Vec3;\n}\n\nexport interface Model {\n  vertices: Vertex[];\n  edges: Edge[];\n  faces: Face[];\n}\n\nexport interface DieCtor {\n  (rounding: number, edgeDetail: number): Die;\n}\n\nexport interface Die {\n  model: Model;\n  shape: Shape;\n  texture: Texture;\n  geometry: BufferGeometry[];\n  results: number[];\n}\n\nexport namespace Die {\n  export function createObject(die: Die) {\n    const mat = new ShaderMaterial({\n      vertexShader,\n      fragmentShader,\n    });\n\n    const material2 = new MeshPhysicalMaterial({\n      map: die.texture,\n      // transparent: true,\n      depthTest: true,\n      depthWrite: true,\n      visible: true,\n      roughness: 0.6,\n      metalness: 0.4,\n      clearcoat: 1,\n      clearcoatRoughness: 0.6,\n      reflectivity: 1,\n    });\n\n    const material1 = new MeshStandardMaterial({\n      map: die.texture,\n      transparent: true,\n    });\n\n    const object = new Group();\n    // object.add(...die.geometry.map(g => {\n    //   const mesh = new Mesh(g, mat);\n    //   mesh.castShadow = true;\n    //   return mesh;\n    // }));\n    object.add(...die.geometry.map(g => {\n      const mesh = new Mesh(g, material2);\n      mesh.castShadow = true;\n      return mesh;\n    }));\n\n    return object;\n  }\n\n  export function createBody(die: Die) {\n    return new Body({\n      mass: 1,\n      shape: die.shape,\n    });\n  }\n\n  export function create(die: Die): DieObject {\n    const body = createBody(die);\n    const object = createObject(die);\n\n    return { die, body, object };\n  }\n\n  export function initRoll(o: DieObject, roll: DieRoll) {\n    o.body.position = roll.position.clone();\n    o.body.quaternion = roll.orientation.clone();\n    o.body.velocity = roll.velocity.clone();\n    o.body.angularVelocity = roll.angularVelocity.clone();\n  }\n\n  export function update(o: DieObject) {\n    o.object.position.set(\n      o.body.position.x,\n      o.body.position.y,\n      o.body.position.z,\n    );\n\n    o.object.quaternion.set(\n      o.body.quaternion.x,\n      o.body.quaternion.y,\n      o.body.quaternion.z,\n      o.body.quaternion.w,\n    );\n  }\n\n  export function resolve(o: DieObject) {\n    let spin = o.body.angularVelocity.lengthSquared();\n    let velocity = o.body.velocity.lengthSquared();\n    let face = o.die.model.faces.find(f => o.body.quaternion.vmult(f.normal).dot(Vec3.UNIT_Y) < -0.99);\n\n    if ((o.body.type == Body.STATIC || spin < 0.0001 && velocity < 0.0001) && face !== undefined) {\n      return face;\n    } else {\n      return null;\n    }\n  }\n}\n\nexport interface DieRoll {\n  position: Vec3;\n  orientation: Quat;\n  velocity: Vec3;\n  angularVelocity: Vec3;\n}\n\nexport interface DieObject {\n  die: Die;\n  object: Object3D;\n  body: Body;\n}\n\nexport function randomQuaternion(random: Random) {\n  const u = random();\n  const v = random();\n  const w = random();\n\n  return new Quat(\n    Math.sqrt(1 - u) * Math.sin(2 * Math.PI * v),\n    Math.sqrt(1 - u) * Math.cos(2 * Math.PI * v),\n    Math.sqrt(u) * Math.sin(2 * Math.PI * w),\n    Math.sqrt(u) * Math.cos(2 * Math.PI * w),\n  );\n}\n\nfunction defineDieGeometry(m: Model): (rounding: number, edgeDetail: number) => BufferGeometry[] {\n  return (rounding, edgeDetail) => {\n    function angleCCW(p1: Vec3, p2: Vec3, origin: Vec3, normal: Vec3) {\n      const v1 = p1.vsub(origin);\n      const v2 = p2.vsub(origin);\n      const cosine = Math.min(1, Math.max(-1, v1.dot(v2) / v1.length() / v2.length()));\n      const theta = Math.acos(cosine);\n      const cross = v1.cross(v2).dot(normal);\n\n      if (cross >= 0) {\n        return theta;\n      } else {\n        return Math.PI * 2 - theta;\n      }\n    }\n\n    function sortCCW(points: Vec3[], normal: Vec3) {\n      const center = new Vec3();\n      for (const v of points) center.vadd(v, center);\n      center.scale(1 / points.length, center);\n\n      const ref = points[0];\n      return points.slice().sort((a, b) => {\n        return angleCCW(ref, a, center, normal) - angleCCW(ref, b, center, normal);\n      });\n    }\n\n    const allFaces: [Vec3, Vector2][][] = [];\n    const allNormals: Vec3[] = [];\n\n    const vertexCenters = m.vertices.map(v => {\n      const A = new Matrix3().set(\n        v.faces[0].normal.x, v.faces[0].normal.y, v.faces[0].normal.z,\n        v.faces[1].normal.x, v.faces[1].normal.y, v.faces[1].normal.z,\n        v.faces[2].normal.x, v.faces[2].normal.y, v.faces[2].normal.z,\n      );\n\n      A.invert();\n\n      const B = new Vector3(-rounding, -rounding, -rounding);\n      const x = B.applyMatrix3(A);\n      const y = new Vec3(x.x, x.y, x.z);\n\n      assert(v.faces.every(f => Math.abs(f.normal.dot(y) + rounding) < 1e-6), 'rounding');\n\n      return v.point.vadd(y);\n    });\n\n    for (const edge of m.edges) {\n      const o1 = vertexCenters[m.vertices.indexOf(edge.vertices[0])];\n      const o2 = vertexCenters[m.vertices.indexOf(edge.vertices[1])];\n\n      const q1 = new Quat().setFromVectors(edge.faces[0].normal, edge.faces[0].normal);\n      const q2 = new Quat().setFromVectors(edge.faces[0].normal, edge.faces[1].normal);\n      const q = new Quat();\n\n      for (let i = 0; i < edgeDetail; ++i) {\n        q1.slerp(q2, i / edgeDetail, q);\n        const v11 = o1.vadd(q.vmult(edge.faces[0].normal.scale(rounding)));\n        const v21 = o2.vadd(q.vmult(edge.faces[0].normal.scale(rounding)));\n\n        q1.slerp(q2, (i + 1) / edgeDetail, q);\n        const v12 = o1.vadd(q.vmult(edge.faces[0].normal.scale(rounding)));\n        const v22 = o2.vadd(q.vmult(edge.faces[0].normal.scale(rounding)));\n\n        q1.slerp(q2, (i + 0.5) / edgeDetail, q);\n        const normal = q.vmult(edge.faces[0].normal);\n\n        allFaces.push(sortCCW([v11, v21, v22, v12], normal).map(v => [v, new Vector2(0.5, 0.5)]));\n        allNormals.push(normal);\n      }\n    }\n\n    for (let i = 0; i < m.faces.length; ++i) {\n      const inset = m.faces[i].vertices.map(v => vertexCenters[m.vertices.indexOf(v)].vadd(m.faces[i].normal.scale(rounding)));\n      const ccw = sortCCW(inset, m.faces[i].normal);\n\n      const center = new Vec3();\n      for (const v of ccw) center.vadd(v, center);\n      center.scale(1 / ccw.length, center);\n\n      const u0 = ccw[1].vsub(center).unit();\n      const u1 = u0.cross(m.faces[i].normal);\n\n      const offsets = ccw.map(c => {\n        const diff = c.vsub(center);\n        const x = diff.dot(u1);\n        const y = diff.dot(u0);\n\n        return [c, new Vector2(x, y)] as [Vec3, Vector2];\n      });\n\n      const min = offsets.reduce((min, v) => new Vector2(Math.min(min.x, v[1].x), Math.min(min.y, v[1].y)), new Vector2);\n      const max = offsets.reduce((max, v) => new Vector2(Math.max(max.x, v[1].x), Math.max(max.y, v[1].y)), new Vector2);\n\n      const range = Math.max(-min.x, -min.y, max.x, max.y);\n\n      for (const o of offsets) {\n        o[1].multiplyScalar(1 / range);\n        o[1].x = (o[1].x / 2 + 0.5 + i) / m.faces.length;\n        o[1].y = o[1].y / 2 + 0.5;\n      }\n\n      allFaces.push(offsets);\n      allNormals.push(m.faces[i].normal);\n    }\n\n    const threeTextures: number[] = [];\n    const threeVertices: number[] = [];\n    const threeNormals: number[] = [];\n    const threeFaces: number[] = [];\n\n    for (let i = 0; i < allFaces.length; ++i) {\n      const i0 = threeVertices.length / 3;\n\n      for (const [v, uv] of allFaces[i]) {\n        threeVertices.push(v.x, v.y, v.z);\n        threeTextures.push(uv.x, uv.y);\n        threeNormals.push(allNormals[i].x, allNormals[i].y, allNormals[i].z);\n      }\n\n      threeFaces.push(i0, i0 + 1, i0 + 2);\n      if (allFaces[i].length >= 4) threeFaces.push(i0 + 2, i0 + 3, i0 + 0);\n      if (allFaces[i].length >= 5) threeFaces.push(i0 + 3, i0 + 4, i0 + 0);\n    }\n\n    const geometries: BufferGeometry[] = [];\n\n    const geometry = new BufferGeometry();\n    geometry.setAttribute('position', new BufferAttribute(new Float32Array(threeVertices), 3));\n    geometry.setAttribute('normal', new BufferAttribute(new Float32Array(threeNormals), 3));\n    geometry.setAttribute('uv', new BufferAttribute(new Float32Array(threeTextures), 2));\n    geometry.setIndex(threeFaces);\n\n    geometries.push(geometry);\n\n    for (const v of vertexCenters) {\n      const sphere = new SphereGeometry(rounding);\n      sphere.translate(v.x, v.y, v.z);\n      const matrix = new Matrix4();\n      matrix.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n      sphere.attributes.uv.applyMatrix4(matrix);\n      geometries.push(sphere);\n    }\n\n    return geometries;\n  };\n}\n\nfunction defineDieShape(m: Model): Shape {\n  return new ConvexPolyhedron({\n    vertices: m.vertices.map(v => v.point),\n    normals: m.faces.map(f => f.normal),\n    faces: m.faces.map(f => f.vertices.map(v => m.vertices.indexOf(v))),\n  });\n}\n\nfunction defineDieModel(numFaces: number, fn: (scale: number) => [Vec3[], ...number[]]): Model {\n  const [points, ...edgeLengths] = fn(1);\n\n  const vertices: Vertex[] = [];\n  const edges: Edge[] = [];\n  const faces: Face[] = [];\n\n  for (let i1 = 0; i1 < points.length; ++i1) {\n    const v1: Vertex = {\n      point: points[i1],\n      edges: [],\n      faces: [],\n    };\n\n    vertices.push(v1);\n\n    for (let i2 = 0; i2 < i1; ++i2) {\n      const v2 = vertices[i2];\n\n      const distance = v1.point.vsub(v2.point);\n      if (edgeLengths.some(l => Math.abs(l - distance.length()) < 1e-6)) {\n        const edge: Edge = {\n          vertices: [v1, v2],\n          faces: [] as any\n        };\n\n        v1.edges.push(edge);\n        v2.edges.push(edge);\n        edges.push(edge);\n      }\n    }\n  }\n\n  function findFaces(target: Vertex, origin: Vertex, maxDepth: number) {\n    const cycles = [];\n    const queue = [\n      [origin, []] as [Vertex, Edge[]],\n    ];\n\n    while (queue.length > 0) {\n      const [node, path] = queue.pop()!;\n\n      for (const edge of node.edges) {\n        const next = Edge.otherVertex(edge, node);\n        if (path.includes(edge)) continue;\n\n        if (next == target) {\n          cycles.push([...path, edge]);\n        } else if (path.length + 1 < maxDepth) {\n          queue.push([next, [...path, edge]]);\n        }\n      }\n    }\n\n    return cycles;\n  }\n\n  const edgesPerFace = 2 * edges.length / numFaces;\n\n  const allFaces = [];\n  for (const v of vertices) {\n    allFaces.push(...findFaces(v, v, edgesPerFace));\n  }\n\n  for (const faceEdges of allFaces) {\n    const set = new Set<Vertex>();\n    for (const e of faceEdges) for (const p of e.vertices) set.add(p);\n    const faceVertices = [...set];\n\n    const normal = (faceVertices[1].point.vsub(faceVertices[0].point)).cross(faceVertices[2].point.vsub(faceVertices[0].point)).unit();\n    if (faces.find(f => f.normal.almostEquals(normal))) continue;\n\n    const center = new Vec3();\n    for (const v of faceVertices) center.vadd(v.point, center);\n    center.scale(1 / faceVertices.length, center);\n\n    if (center.dot(normal) < 0) continue;\n\n    const face = {\n      normal,\n      edges: faceEdges,\n      vertices: faceVertices,\n    };\n\n    for (const v of faceVertices) v.faces.push(face);\n    for (const e of faceEdges) e.faces.push(face);\n    faces.push(face);\n  }\n\n  assert(edges.every(e => e.faces.length == 2), 'valid die');\n  return { vertices, edges, faces };\n}\n\nfunction defineDieTexture(m: Model, fn: (ctx: CanvasRenderingContext2D, face: (text: string, face: number, rotation: number, offset: number) => void) => void): () => Texture {\n  return () => {\n    const canvas = document.createElement('canvas');\n    canvas.width = m.faces.length * 512;\n    canvas.height = 512;\n\n    const context = canvas.getContext('2d');\n    assert(context != null, 'context');\n\n    context.fillStyle = '#333';\n    context.fillRect(0, 0, m.faces.length * 512, 512);\n    // context.clearRect(0, 0, m.faces.length * 512, 512);\n\n    context.fillStyle = '#eee';\n    context.textAlign = 'center';\n    context.textBaseline = 'middle';\n\n    fn(context, (text, face, rotation, offset) => {\n      context.translate(256 + 512 * face, 256);\n      context.rotate(rotation * Math.PI);\n      context.translate(0, offset);\n      context.fillText(text, 0, 0);\n      context.resetTransform();\n    });\n\n    const texture = new CanvasTexture(canvas);\n    return texture;\n  };\n}\n\nfunction defineDie(model: Model, shape: Shape, texture: () => Texture, geometry: (rounding: number, edgeDetail: number) => BufferGeometry[], results: number[]) {\n  return (rounding: number, edgeDetail: number): Die => {\n    return { model, shape, texture: texture(), geometry: geometry(rounding, edgeDetail), results };\n  };\n}\n\nexport const d4Model = defineDieModel(4, scale => {\n  const edge = scale * 20 / 16;\n\n  const q2 = new Quat().setFromAxisAngle(Vec3.UNIT_Z, -Math.acos(-1 / 3));\n  const q3 = new Quat().setFromAxisAngle(Vec3.UNIT_Y, Math.PI * 2 / 3).mult(q2);\n  const q4 = new Quat().setFromAxisAngle(Vec3.UNIT_Y, -Math.PI * 2 / 3).mult(q2);\n\n  const leg = Vec3.UNIT_Y.scale(edge * Math.sqrt(6) / 4);\n\n  const points = [\n    leg,\n    q2.vmult(leg),\n    q3.vmult(leg),\n    q4.vmult(leg),\n  ];\n\n  return [points, edge];\n});\n\nexport const d4Shape = defineDieShape(d4Model);\n\nexport const d4Texture = defineDieTexture(d4Model, (ctx, face) => {\n  ctx.font = 'bold 130px Roboto';\n\n  face('1', 0, 0, -125);\n  face('2', 0, 2 / 3, -125);\n  face('3', 0, 4 / 3, -125);\n\n  face('1', 1, 0, -125);\n  face('4', 1, 4 / 3, -125);\n  face('3', 1, 2 / 3, -125);\n\n  face('1', 2, 0, -125);\n  face('4', 2, 2 / 3, -125);\n  face('2', 2, 4 / 3, -125);\n\n  face('4', 3, 0, -125);\n  face('2', 3, 4 / 3, -125);\n  face('3', 3, 2 / 3, -125);\n});\n\nexport const d4Geometry = defineDieGeometry(d4Model);\n\nexport const d4Results = [2, 3, 4, 1];\n\nexport const d4 = defineDie(d4Model, d4Shape, d4Texture, d4Geometry, d4Results);\n\nexport const d6Model = defineDieModel(6, scale => {\n  const edge = scale;\n\n  const points = [];\n  for (let i = 0; i < 8; ++i) {\n    points.push(new Vec3(\n      (i & 0b001) ? edge / 2 : -edge / 2,\n      (i & 0b010) ? edge / 2 : -edge / 2,\n      (i & 0b100) ? edge / 2 : -edge / 2,\n    ));\n  }\n\n  return [points, edge];\n});\n\nexport const d6Shape = defineDieShape(d6Model);\n\nexport const d6Texture = defineDieTexture(d6Model, (ctx, face) => {\n  ctx.font = 'bold 240px Roboto';\n\n  face('1', 0, 3 / 4, 20);\n  face('2', 2, 1 / 4, 20);\n  face('3', 1, 7 / 4, 20);\n\n  face('4', 3, 1 / 4, 20);\n  face('5', 5, 7 / 4, 20);\n  face('6', 4, 1 / 4, 20);\n});\n\nexport const d6Geometry = defineDieGeometry(d6Model);\n\nexport const d6Results = [6, 4, 5, 3, 1, 2];\n\nexport const d6 = defineDie(d6Model, d6Shape, d6Texture, d6Geometry, d6Results);\n\nexport const d8Model = defineDieModel(8, scale => {\n  const edge = scale * 18.5 / 16;\n\n  const x = edge / Math.SQRT2;\n  const points = [\n    new Vec3(+x, 0, 0),\n    new Vec3(-x, 0, 0),\n    new Vec3(0, +x, 0),\n    new Vec3(0, -x, 0),\n    new Vec3(0, 0, +x),\n    new Vec3(0, 0, -x),\n  ];\n\n  return [points, edge];\n});\n\nexport const d8Shape = defineDieShape(d8Model);\n\nexport const d8Texture = defineDieTexture(d8Model, (ctx, face) => {\n  ctx.font = 'bold 200px Roboto';\n\n  face('1', 0, 4 / 3, 0);\n  face('2', 1, 4 / 3, 0);\n  face('3', 2, 2 / 3, 0);\n  face('4', 3, 2 / 3, 0);\n\n  face('5', 5, 4 / 3, 0);\n  face('6', 4, 4 / 3, 0);\n  face('7', 6, 2 / 3, 0);\n  face('8', 7, 2 / 3, 0);\n});\n\nexport const d8Geometry = defineDieGeometry(d8Model);\n\nexport const d8Results = [8, 7, 6, 5, 3, 4, 2, 1];\n\nexport const d8 = defineDie(d8Model, d8Shape, d8Texture, d8Geometry, d8Results);\n\nexport const d10Model = defineDieModel(10, scale => {\n  const edge1 = scale;\n\n  const theta = Math.PI * 2 / 5;\n  const a1 = Math.PI * .27;\n\n  const r1 = Math.sin(a1) * edge1;\n  const h1 = Math.cos(a1) * edge1;\n\n  const r2 = Math.cos(theta / 2) * r1;\n  const a2 = Math.atan(r2 / h1);\n  const a3 = Math.PI - a1 - a2;\n\n  const lawOfSines = edge1 / Math.sin(a2);\n  const height = lawOfSines * Math.sin(a3);\n\n  const legLength = Math.sqrt(height * height / 4 + edge1 * edge1 - height * edge1 * Math.cos(a1));\n  const legAngle1 = Math.asin(edge1 * Math.sin(a1) / legLength);\n  const legAngle2 = Math.PI / 2 - legAngle1;\n\n  const q1 = new Quat().setFromAxisAngle(Vec3.UNIT_Y, theta);\n  const q2 = new Quat().setFromAxisAngle(Vec3.UNIT_Z, legAngle2);\n\n  const tall = Vec3.UNIT_Y.scale(height / 2);\n  const leg = Vec3.UNIT_X.scale(legLength);\n\n  const points = [\n    tall,\n    q2.vmult(leg),\n    q1.vmult(q2.vmult(leg)),\n    q1.vmult(q1.vmult(q2.vmult(leg))),\n    q1.vmult(q1.vmult(q1.vmult(q2.vmult(leg)))),\n    q1.vmult(q1.vmult(q1.vmult(q1.vmult(q2.vmult(leg))))),\n    tall.negate(),\n    q2.vmult(leg.negate()),\n    q1.vmult(q2.vmult(leg.negate())),\n    q1.vmult(q1.vmult(q2.vmult(leg.negate()))),\n    q1.vmult(q1.vmult(q1.vmult(q2.vmult(leg.negate())))),\n    q1.vmult(q1.vmult(q1.vmult(q1.vmult(q2.vmult(leg.negate()))))),\n  ];\n\n  return [points, points[1].vsub(points[0]).length(), points[7].vsub(points[3]).length()];\n});\n\nexport const d10Shape = defineDieShape(d10Model);\n\nexport const d10Texture = defineDieTexture(d10Model, (ctx, face) => {\n  ctx.font = 'bold 160px Roboto';\n\n  face('1', 0, 0, 0);\n  face('2', 8, 1, 0);\n  face('3', 4, 0, 0);\n  face('4', 5, 1, 0);\n  face('5', 2, 0, 0);\n\n  face('6', 9, 1, 0);\n  face('7', 1, 0, 0);\n  face('8', 7, 1, 0);\n  face('9', 3, 0, 0);\n  face('10', 6, 1, 0);\n});\n\nexport const d10Geometry = defineDieGeometry(d10Model);\n\nexport const d10Results = [10, 4, 6, 2, 8, 7, 1, 3, 9, 5];\n\nexport const d10 = defineDie(d10Model, d10Shape, d10Texture, d10Geometry, d10Results);\n\nexport const d12Model = defineDieModel(12, scale => {\n  const edge = scale * 0.5;\n  const phi = (1 + Math.sqrt(5)) / 2;\n\n  const points = [\n    new Vec3(1, 1, 1),\n    new Vec3(-1, 1, 1),\n    new Vec3(1, -1, 1),\n    new Vec3(1, 1, -1),\n    new Vec3(-1, -1, 1),\n    new Vec3(1, -1, -1),\n    new Vec3(-1, 1, -1),\n    new Vec3(-1, -1, -1),\n\n    new Vec3(0, phi, 1 / phi),\n    new Vec3(0, -phi, 1 / phi),\n    new Vec3(0, phi, -1 / phi),\n    new Vec3(0, -phi, -1 / phi),\n\n    new Vec3(1 / phi, 0, phi),\n    new Vec3(1 / phi, 0, -phi),\n    new Vec3(-1 / phi, 0, phi),\n    new Vec3(-1 / phi, 0, -phi),\n\n    new Vec3(phi, 1 / phi, 0),\n    new Vec3(-phi, 1 / phi, 0),\n    new Vec3(phi, -1 / phi, 0),\n    new Vec3(-phi, -1 / phi, 0),\n  ];\n\n  for (const point of points) point.scale(edge * phi / 2, point);\n\n  return [points, edge];\n});\n\nexport const d12Shape = defineDieShape(d12Model);\n\nexport const d12Geometry = defineDieGeometry(d12Model);\n\nexport const d12Texture = defineDieTexture(d12Model, (ctx, face) => {\n  ctx.font = 'bold 240px Roboto';\n\n  face('1', 0, 0, 20);\n  face('2', 2, 8 / 5, 20);\n  face('3', 1, 2 / 5, 20);\n  face('4', 7, 0, 20);\n  face('5', 6, 6 / 5, 20);\n  face('6', 5, 6 / 5, 20);\n\n  face('7', 3, 8 / 5, 20);\n  face('8', 8, 8 / 5, 20);\n  face('9', 4, 4 / 5, 20);\n  face('10', 10, 4 / 5, 20);\n  face('11', 9, 8 / 5, 20);\n  face('12', 11, 6 / 5, 20);\n});\n\nexport const d12Results = [12, 10, 11, 6, 4, 7, 8, 9, 5, 2, 3, 1];\n\nexport const d12 = defineDie(d12Model, d12Shape, d12Texture, d12Geometry, d12Results);\n\nexport const d20Model = defineDieModel(20, scale => {\n  const edge = scale * 0.8;\n  const phi = (1 + Math.sqrt(5)) / 2;\n\n  const points = [\n    new Vec3(0, 1, phi),\n    new Vec3(0, -1, phi),\n    new Vec3(0, 1, -phi),\n    new Vec3(0, -1, -phi),\n\n    new Vec3(1, phi, 0),\n    new Vec3(-1, phi, 0),\n    new Vec3(1, -phi, 0),\n    new Vec3(-1, -phi, 0),\n\n    new Vec3(phi, 0, 1),\n    new Vec3(phi, 0, -1),\n    new Vec3(-phi, 0, 1),\n    new Vec3(-phi, 0, -1),\n  ];\n\n  for (const point of points) point.scale(edge / 2, point);\n\n  return [points, 20, edge];\n});\n\nexport const d20Shape = defineDieShape(d20Model);\n\nexport const d20Geometry = defineDieGeometry(d20Model);\n\nexport const d20Texture = defineDieTexture(d20Model, (ctx, face) => {\n  ctx.font = 'bold 180px Roboto';\n\n  face('1', 0, 0, 35);\n  face('2', 12, 0, 35);\n  face('3', 1, 2 / 3, 35);\n  face('4', 13, 2 / 3, 35);\n  face('5', 10, 0, 35);\n  face('6', 7, 0, 35);\n  face('7', 2, 4 / 3, 35);\n  face('8', 18, 2 / 3, 35);\n  face('9', 6, 2 / 3, 35);\n  face('10', 16, 0, 35);\n\n  face('11', 19, 0, 35);\n  face('12', 9, 4 / 3, 35);\n  face('13', 17, 4 / 3, 35);\n  face('14', 14, 2 / 3, 35);\n  face('15', 11, 0, 35);\n  face('16', 5, 0, 35);\n  face('17', 3, 4 / 3, 35);\n  face('18', 8, 2 / 3, 35);\n  face('19', 4, 2 / 3, 35);\n  face('20', 15, 0, 35);\n});\n\nexport const d20Results = [20, 18, 14, 4, 2, 5, 12, 15, 3, 9, 16, 6, 19, 17, 7, 1, 11, 8, 13, 10];\n\nexport const d20 = defineDie(d20Model, d20Shape, d20Texture, d20Geometry, d20Results);\n\n","export default \"varying vec3 mPosition;\\nvarying vec3 wPosition;\\nvarying vec3 wNormal;\\n\\nvoid main()\\n{\\n  mPosition = position;\\n  wPosition = (modelMatrix * vec4(position, 1.0)).xyz;\\n  wNormal = (modelMatrix * vec4(normal, 0.0)).xyz;\\n\\n  vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n  gl_Position = projectionMatrix * mvPosition;\\n}\\n\";","export default \"const vec3 lightDir = normalize(vec3(2.0, 3.0, -1.0));\\nconst vec3 lightColor = vec3(1.0, 1.0, 1.0);\\n\\nvarying vec3 mPosition;\\nvarying vec3 wPosition;\\nvarying vec3 wNormal;\\n\\nfloat mod289(float x){return x - floor(x * (1.0 / 289.0)) * 289.0;}\\nvec4 mod289(vec4 x){return x - floor(x * (1.0 / 289.0)) * 289.0;}\\nvec4 perm(vec4 x){return mod289(((x * 34.0) + 1.0) * x);}\\n\\nfloat noise(vec3 p){\\n    vec3 a = floor(p);\\n    vec3 d = p - a;\\n    d = d * d * (3.0 - 2.0 * d);\\n\\n    vec4 b = a.xxyy + vec4(0.0, 1.0, 0.0, 1.0);\\n    vec4 k1 = perm(b.xyxy);\\n    vec4 k2 = perm(k1.xyxy + b.zzww);\\n\\n    vec4 c = k2 + a.zzzz;\\n    vec4 k3 = perm(c);\\n    vec4 k4 = perm(c + 1.0);\\n\\n    vec4 o1 = fract(k3 * (1.0 / 41.0));\\n    vec4 o2 = fract(k4 * (1.0 / 41.0));\\n\\n    vec4 o3 = o2 * d.z + o1 * (1.0 - d.z);\\n    vec2 o4 = o3.yw * d.x + o3.xz * (1.0 - d.x);\\n\\n    return o4.y * d.y + o4.x * (1.0 - d.y);\\n}\\n\\nfloat ulerp(float x0, float x1, float x) {\\n  return (x - x0) * (1.0 / (x1 - x0));\\n}\\n\\nstruct GradientStop { float value; vec3 color; };\\n\\nvec3 gradient(float value, GradientStop stops[4]) {\\n  int index = 0;\\n  while (value > stops[index + 1].value) index += 1;\\n\\n  float v = ulerp(stops[index].value, stops[index + 1].value, value);\\n  return mix(stops[index].color, stops[index + 1].color, v);\\n}\\n\\nvoid main(void) {\\n  vec3 viewDir = normalize(cameraPosition - wPosition);\\n  vec3 reflectDir = reflect(-lightDir, normalize(wNormal));\\n\\n  float value = noise(mPosition * 4.0);\\n  float split = 0.5;\\n\\n  vec3 c0 = vec3(0.1, 0.1, 0.1);\\n  vec3 c1 = vec3(89.0, 60.0, 143.0) / 255.0;\\n  vec3 c2 = vec3(2.0, 128.0, 144.0) / 255.0;\\n\\n  vec3 color = gradient(value, GradientStop[4] (\\n    GradientStop(0.0, c0),\\n    GradientStop(0.49, c1),\\n    GradientStop(0.51, c2),\\n    GradientStop(1.0, c0)\\n  ));\\n\\n  vec3 white = vec3(1.0, 1.0, 1.0);\\n\\n  vec3 ambient = color * 0.4;\\n  vec3 diffuse = color * 0.6 * max(0.0, dot(lightDir, normalize(wNormal)));\\n  vec3 specular = white * 0.6 * pow(max(0.0, dot(viewDir, reflectDir)), 32.0);\\n\\n  gl_FragColor = vec4((ambient + diffuse + specular), 1.0);\\n}\\n\";","import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { Body, ContactMaterial, Material, Plane, Vec3, World, Quaternion as Quat } from 'cannon-es';\nimport { AmbientLight, DirectionalLight, Mesh, Object3D, OrthographicCamera, PCFSoftShadowMap, PlaneGeometry, Quaternion, Scene, ShaderMaterial, ShadowMaterial, SphereGeometry, Vector2, Vector3, WebGLRenderer } from 'three';\n\nimport { DieRoll, DieObject, Die, d4, d6, d8, d10, d12, d20, randomQuaternion } from './dice';\nimport { Ref } from 'vue';\n\ninterface Dice {\n  d4: Die;\n  d6: Die;\n  d8: Die;\n  d10: Die;\n  d12: Die;\n  d20: Die;\n}\n\ninterface Picker {\n  die: Die;\n  object: Object3D;\n  position: Vector2;\n  orientation: Quaternion;\n  rotation: number;\n}\n\nfunction loadDice() {\n  return {\n    d4: d4(0.05, 20),\n    d6: d6(0.09, 20),\n    d8: d8(0.09, 20),\n    d10: d10(0.09, 20),\n    d12: d12(0.09, 20),\n    d20: d20(0.09, 20),\n  };\n}\n\nfunction rollDie(position: Vec3): DieRoll {\n  const orientation = randomQuaternion(Math.random);\n\n  const velDir = Math.random() * Math.PI * 2;\n  const velocity = new Vec3(Math.cos(velDir), 0, Math.sin(velDir)).scale(3)\n    .vadd(new Vec3(8, 0, 0));\n\n  const spinDir = randomQuaternion(Math.random);\n  const angularVelocity = spinDir.vmult(Vec3.UNIT_Y.scale(30));\n\n  return {\n    position,\n    orientation,\n    velocity,\n    angularVelocity\n  };\n}\n\nfunction initScene(canvas: HTMLCanvasElement) {\n  const scene = new Scene();\n  const camera = new OrthographicCamera(-canvas.width / 200, canvas.width / 200, canvas.height / 200, -canvas.height / 200);\n  camera.position.set(0, 100, 0);\n  camera.lookAt(0, 0, 0);\n\n  const renderer = new WebGLRenderer({\n    canvas,\n    alpha: true,\n    antialias: true,\n  });\n  renderer.shadowMap.enabled = true;\n  renderer.shadowMap.type = PCFSoftShadowMap;\n\n  const ambientLight = new AmbientLight(0xFFFFFF, 0.4);\n  scene.add(ambientLight);\n\n  const halfDiagonal = Math.sqrt(camera.right * camera.right + camera.top * camera.top);\n\n  const directionalLight1 = new DirectionalLight(0xFFFFFF, 0.6);\n  directionalLight1.position.set(2, 4, -1);\n  directionalLight1.shadow.mapSize.width = 4 * canvas.width;\n  directionalLight1.shadow.mapSize.height = 4 * canvas.height;\n  directionalLight1.shadow.camera.near = -2 * halfDiagonal;\n  directionalLight1.shadow.camera.far = 2 * halfDiagonal;\n  directionalLight1.shadow.camera.top = halfDiagonal;\n  directionalLight1.shadow.camera.bottom = -halfDiagonal;\n  directionalLight1.shadow.camera.left = -halfDiagonal;\n  directionalLight1.shadow.camera.right = halfDiagonal;\n  directionalLight1.castShadow = true;\n  scene.add(directionalLight1);\n\n  const tableGeometry = new PlaneGeometry(2 * camera.right, 2 * camera.top);\n  const tableMaterial = new ShadowMaterial({ opacity: 0.5 });\n  const table = new Mesh(tableGeometry, tableMaterial);\n  table.rotateX(-Math.PI / 2);\n  table.castShadow = false;\n  table.receiveShadow = true;\n  scene.add(table);\n\n  return { scene, camera, renderer };\n}\n\nfunction initWorld(viewport: Vector2) {\n  const world = new World({\n    gravity: new Vec3(0, -30, 0),\n  });\n\n  const wallMaterial = new Material();\n  const floorMaterial = new Material();\n\n  const floor = new Body({\n    type: Body.STATIC,\n    shape: new Plane(),\n    position: new Vec3(0, 0, 0),\n    quaternion: new Quat().setFromVectors(Vec3.UNIT_Z, Vec3.UNIT_Y),\n    material: floorMaterial,\n  });\n\n  const walls = [\n    new Body({\n      type: Body.STATIC,\n      shape: new Plane(),\n      position: new Vec3(-viewport.x / 2, 0, 0),\n      quaternion: new Quat().setFromVectors(Vec3.UNIT_Z, Vec3.UNIT_X),\n      material: wallMaterial,\n    }),\n    new Body({\n      type: Body.STATIC,\n      shape: new Plane(),\n      position: new Vec3(+viewport.x / 2, 0, 0),\n      quaternion: new Quat().setFromVectors(Vec3.UNIT_Z, Vec3.UNIT_X.negate()),\n      material: wallMaterial,\n    }),\n    new Body({\n      type: Body.STATIC,\n      shape: new Plane(),\n      position: new Vec3(0, 0, -viewport.y / 2),\n      quaternion: new Quat().setFromVectors(Vec3.UNIT_Z, Vec3.UNIT_Z),\n      material: wallMaterial,\n    }),\n    new Body({\n      type: Body.STATIC,\n      shape: new Plane(),\n      position: new Vec3(0, 0, +viewport.y / 2),\n      quaternion: new Quat().setFromVectors(Vec3.UNIT_Z, Vec3.UNIT_Z.negate()),\n      material: wallMaterial,\n    }),\n  ];\n\n  world.addBody(floor);\n  for (const body of walls) world.addBody(body);\n\n  world.addContactMaterial(new ContactMaterial(world.defaultMaterial, wallMaterial, { friction: 0 }));\n  world.addContactMaterial(new ContactMaterial(world.defaultMaterial, floorMaterial, { friction: 0.04 }));\n  world.addContactMaterial(new ContactMaterial(world.defaultMaterial, world.defaultMaterial, { friction: 0 }));\n\n  return { world, walls, floor };\n}\n\nexport function initDiceRoller(canvas: HTMLCanvasElement, results: Ref<null | number[]>): any {\n  const dice = loadDice();\n\n  const box = canvas.getBoundingClientRect();\n  canvas.width = box.width;\n  canvas.height = box.height;\n\n  const { scene, camera, renderer } = initScene(canvas);\n  const viewport = new Vector2(camera.right * 2, camera.top * 2);\n  const { world, floor, walls } = initWorld(viewport);\n\n  // const orbit = new OrbitControls(camera, canvas);\n\n  const objects: DieObject[] = [];\n\n  const allDice = Reflect.ownKeys(dice).map(k => dice[k as keyof Dice]);\n  const pickers = allDice.map((die, i) => {\n    const position = new Vector2(\n      -viewport.x / 2 + 0.5,\n      1 * ((i + 0.5) - allDice.length / 2),\n    );\n\n    const object = Die.createObject(die);\n    object.position.set(position.x, 10, position.y);\n    object.scale.set(0.6, 0.6, 0.6);\n\n    const rotation = new Quaternion().setFromUnitVectors(\n      new Vector3(die.model.faces[0].normal.x, die.model.faces[0].normal.y, die.model.faces[0].normal.z),\n      new Vector3(0, -1, 0)\n    );\n\n    const center = new Vec3();\n    for (const v of die.model.faces[0].vertices) center.vadd(v.point, center);\n    center.scale(1 / die.model.faces[0].vertices.length, center);\n\n    const b = new Vector3();\n    b.copy(die.model.faces[0].vertices[1].point as any);\n    b.sub(center as any);\n    b.normalize();\n    b.applyQuaternion(rotation);\n\n    const q = new Quaternion();\n    if (die.model.faces.length == 6)\n      q.setFromAxisAngle(new Vector3(0, 1, 0), Math.PI * 5 / 4);\n\n    else if (die.model.faces.length == 8)\n      q.setFromAxisAngle(new Vector3(0, 1, 0), Math.PI * 2 / 3);\n\n    q.multiply(new Quaternion().setFromUnitVectors(b, new Vector3(0, 0, 1)));\n    q.multiply(rotation);\n    q.normalize();\n\n    object.quaternion.copy(q);\n    scene.add(object);\n\n    return {\n      die,\n      object,\n      position,\n      orientation: q,\n      rotation: 0,\n    };\n  });\n\n  function hitTest(x: number, y: number) {\n    const pos = new Vector2(\n      (x / canvas.width - 0.5) * viewport.x,\n      (y / canvas.height - 0.5) * viewport.y,\n    );\n\n    const offset = new Vector2();\n    for (const picker of pickers) {\n      offset.copy(pos);\n      offset.sub(picker.position);\n\n      if (offset.length() < 0.5) {\n        return picker;\n      }\n    }\n\n    return null;\n  }\n\n  function add(die: Die, position: Vec3) {\n    const o = Die.create(die);\n    objects.push(o);\n    scene.add(o.object);\n    world.addBody(o.body);\n\n    const roll = rollDie(position);\n    Die.initRoll(o, roll);\n    Die.update(o);\n  }\n\n  let picking: Picker | null = null;\n  function onMouseEvent(e: MouseEvent) {\n    picking = hitTest(e.offsetX, e.offsetY);\n  }\n\n  canvas.addEventListener('mouseenter', onMouseEvent);\n  canvas.addEventListener('mouseleave', onMouseEvent);\n  canvas.addEventListener('mousemove', onMouseEvent);\n\n  canvas.addEventListener('click', e => {\n    const pick = hitTest(e.offsetX, e.offsetY);\n    if (pick == null) return;\n\n    if (!active) {\n      for (const o of objects) {\n        scene.remove(o.object);\n        world.removeBody(o.body);\n      }\n\n      objects.length = 0;\n      results.value = null;\n    }\n\n    active = true;\n    add(pick.die, new Vec3(pick.object.position.x, 5, pick.object.position.z));\n  });\n\n  let active = false;\n  function render() {\n    canvas.style.cursor = picking ? 'pointer' : 'default';\n\n    const axis = new Vector3(3, 1, -3).normalize();\n    for (const picker of pickers) {\n      if (picker == picking || picker.rotation % 50 != 0) {\n        if (picker == picking)\n          picker.rotation += 1;\n        else if (picker.rotation > 45 || picker.rotation < 5)\n          picker.rotation = 0;\n        else if (picker.rotation < 25)\n          picker.rotation -= 5;\n        else\n          picker.rotation += 5;\n\n        picker.rotation %= 50;\n\n        const q = new Quaternion().setFromAxisAngle(axis, picker.rotation * Math.PI / 25);\n        q.multiply(picker.orientation);\n        q.normalize();\n        picker.object.quaternion.copy(q);\n      } else {\n        picker.object.quaternion.copy(picker.orientation);\n      }\n\n      picker.object.updateMatrix();\n    }\n\n    if (active) {\n      world.step(1 / 60);\n\n      for (const o of objects) {\n        Die.update(o);\n        if (Die.resolve(o)) {\n          o.body.type = Body.STATIC;\n        }\n      }\n\n      const done: [Body, Body][] = [];\n      const bumps = world.contacts.map(c => [c.bi, c.bj]);\n      const strength = Math.min(150, 40 * world.time);\n\n      for (const [a, b] of bumps) {\n        if (a == floor || b == floor) continue;\n        if (done.some(c => a == c[0] && b == c[1] || b == c[0] && a == c[1])) continue;\n        done.push([a, b]);\n\n        if (walls.includes(a) || walls.includes(b)) {\n          const [die, wall] = walls.includes(a) ? [b, a] : [a, b];\n          const normal = wall.quaternion.vmult(Vec3.UNIT_Z);\n          die.applyForce(normal.scale(strength));\n        } else {\n          const dir = a.position.vsub(b.position).unit();\n          a.applyForce(dir.scale(strength / 2));\n          b.applyForce(dir.scale(-strength / 2));\n        }\n      }\n\n      active = objects.some(o => o.body.type != Body.STATIC);\n\n      if (!active) {\n        results.value = objects.map(o => o.die.results[o.die.model.faces.indexOf(Die.resolve(o)!)]);\n      }\n      // const results = objects.map(o => Die.resolve(o));\n      // active = results.some(e => e == null);\n    }\n\n    // orbit.update();\n    renderer.render(scene, camera);\n    requestAnimationFrame(render);\n  }\n\n  requestAnimationFrame(render);\n}\n\nimport vertexShader from './shaders/vertex.glsl';\nimport fragmentShader from './shaders/fragment.glsl';\n\n\nexport function initDiceInspector(canvas: HTMLCanvasElement) {\n  const dice = loadDice();\n\n  const box = canvas.getBoundingClientRect();\n  canvas.width = box.width;\n  canvas.height = box.height;\n\n  const { scene, camera, renderer } = initScene(canvas);\n\n  const orbit = new OrbitControls(camera, canvas);\n\n  const allDice = Reflect.ownKeys(dice).map(k => dice[k as keyof Dice]);\n  const pickers = allDice.map((die, i) => {\n    const position = new Vector2(\n      5 * ((i % 3) - 1),\n      i < 3 ? 2.5 : -2.5,\n    );\n\n    const object = Die.createObject(die);\n\n    const rotation = new Quaternion().setFromUnitVectors(\n      new Vector3(die.model.faces[0].normal.x, die.model.faces[0].normal.y, die.model.faces[0].normal.z),\n      new Vector3(0, -1, 0)\n    );\n\n    const center = new Vec3();\n    for (const v of die.model.faces[0].vertices) center.vadd(v.point, center);\n    center.scale(1 / die.model.faces[0].vertices.length, center);\n\n    const b = new Vector3();\n    b.copy(die.model.faces[0].vertices[1].point as any);\n    b.sub(center as any);\n    b.normalize();\n    b.applyQuaternion(rotation);\n\n    const q = new Quaternion();\n    if (die.model.faces.length == 6)\n      q.setFromAxisAngle(new Vector3(0, 1, 0), Math.PI * 5 / 4);\n\n    else if (die.model.faces.length == 8)\n      q.setFromAxisAngle(new Vector3(0, 1, 0), Math.PI * 2 / 3);\n\n    q.multiply(new Quaternion().setFromUnitVectors(b, new Vector3(0, 0, 1)));\n    q.multiply(rotation);\n    q.normalize();\n\n    object.quaternion.copy(q);\n    object.scale.set(3, 3, 3);\n    object.position.set(position.x, center.length() * 3, position.y);\n    scene.add(object);\n\n    return {\n      die,\n      object,\n      position,\n      orientation: q,\n      rotation: 0,\n    };\n  });\n\n  orbit.addEventListener('change', () => requestAnimationFrame(render));\n\n  let active = false;\n  function render() {\n    renderer.render(scene, camera);\n  }\n\n  requestAnimationFrame(render);\n\n\n  // const mat = new ShaderMaterial({\n  //   vertexShader,\n  //   fragmentShader,\n  // });\n\n  // const mesh = new Mesh(new SphereGeometry(2), mat);\n  // scene.add(mesh);\n  // mesh.position.set(0, 10, 0);\n}\n","import { render } from \"./main.vue?vue&type=template&id=394eaa74&scoped=true\"\nimport script from \"./main.vue?vue&type=script&lang=js\"\nexport * from \"./main.vue?vue&type=script&lang=js\"\n\nimport \"./main.vue?vue&type=style&index=0&id=394eaa74&lang=scss&scoped=true\"\nimport \"./main.vue?vue&type=style&index=1&id=394eaa74&lang=scss\"\n\nimport exportComponent from \"/home/mfro/code/web-apps/dice/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-394eaa74\"]])\n\nexport default __exports__","import { createApp } from 'vue';\n\nimport App from './main.vue';\n\nconst app = createApp(App);\napp.mount('#app')\n"],"sourceRoot":""}