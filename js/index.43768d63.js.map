{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/main.vue","webpack:///./src/dice.ts","webpack:///./src/color.glsl","webpack:///./src/diceroll.ts","webpack:///./src/main.vue?3062","webpack:///./src/main.ts","webpack:///./src/main.vue?4c97","webpack:///./src/main.vue?d0ad"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","class","ref","results","join","reduce","v","Edge","randomQuaternion","random","u","Math","PI","w","sqrt","sin","cos","defineDieGeometry","rounding","edgeDetail","angleCCW","p1","p2","origin","normal","v1","vsub","v2","cosine","min","max","dot","theta","acos","cross","sortCCW","points","center","vadd","scale","sort","a","b","allFaces","vertexCenters","vertices","map","A","set","faces","x","y","z","invert","B","applyMatrix3","assert","every","f","abs","point","edges","edge","o1","indexOf","o2","q1","setFromVectors","q2","q","vmult","UNIT_X","slerp","v11","v21","normal1","v12","v22","normal2","normals","test","reverse","inset","ccw","u0","unit","u1","offsets","diff","range","multiplyScalar","threeTextures","threeVertices","threeNormals","threeFaces","i0","uv","geometries","geometry","setAttribute","Float32Array","setIndex","sphere","translate","matrix","attributes","applyMatrix4","defineDieShape","defineDieModel","numFaces","fn","edgeLengths","i1","i2","distance","some","findFaces","target","maxDepth","cycles","queue","pop","node","path","next","otherVertex","includes","edgesPerFace","faceEdges","Set","e","add","faceVertices","find","almostEquals","face","defineDieTexture","canvas","document","createElement","width","height","context","getContext","clearRect","fillStyle","textAlign","textBaseline","text","rotation","offset","rotate","fillText","resetTransform","texture","defineDie","model","shape","textureFn","geometryFn","Die","materials","Map","shaders","WeakMap","getMaterial","die","material","visible","roughness","metalness","reflectivity","onBeforeCompile","shader","renderer","list","uniforms","vertexShader","fragmentShader","replace","createObject","color","g","mesh","castShadow","children","onBeforeRender","scene","camera","group","now","performance","createBody","mass","body","initRoll","roll","position","clone","quaternion","orientation","velocity","angularVelocity","update","resolve","spin","lengthSquared","index","findIndex","UNIT_Y","type","STATIC","d4Model","setFromAxisAngle","UNIT_Z","q3","mult","q4","leg","d4Shape","d4Texture","ctx","font","d4Geometry","d4Results","d4","d6Model","d6Shape","d6Texture","d6Geometry","d6Results","d6","d8Model","SQRT2","d8Shape","d8Texture","d8Geometry","d8Results","d8","d10Model","edge1","a1","r1","h1","r2","a2","atan","a3","lawOfSines","legLength","legAngle1","asin","legAngle2","tall","negate","d10Shape","d10Texture","d10Geometry","d10Results","d10","d12Model","phi","d12Shape","d12Geometry","d12Texture","d12Results","d12","d20Model","d20Shape","d20Geometry","d20Texture","d20Results","d20","loadDice","rollDie","velDir","spinDir","initScene","viewport","fov","lookAt","alpha","antialias","shadowMap","enabled","ambientLight","halfDiagonal","directionalLight1","shadow","mapSize","near","far","top","bottom","left","right","tableGeometry","tableMaterial","opacity","table","rotateX","receiveShadow","initWorld","world","gravity","wallMaterial","floorMaterial","floor","walls","addBody","addContactMaterial","defaultMaterial","friction","initDiceRoller","dice","box","getBoundingClientRect","objects","allDice","Reflect","ownKeys","k","pickers","lerp","setFromUnitVectors","copy","sub","normalize","applyQuaternion","multiply","hitTest","pos","picker","t0","time","picking","onMouseEvent","offsetX","offsetY","addEventListener","pick","active","remove","removeBody","render","delta","style","cursor","axis","updateMatrix","step","done","bumps","contacts","bi","bj","strength","wall","applyForce","dir","requestAnimationFrame","setup","props","loaded","readyState","__exports__","app","mount"],"mappings":"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","file":"js/index.43768d63.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"index\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","<template>\n  <span class=\"fontloader\">0123456789</span>\n\n  <canvas ref=\"canvas\" />\n\n  <span class=\"results\" v-if=\"results\">\n    {{ results.join(\" + \") }}\n    <template v-if=\"results.length > 1\">\n      = {{ results.reduce((s, v) => s + v, 0) }}\n    </template>\n  </span>\n</template>\n\n<script>\nimport { shallowRef, watch } from 'vue';\n\nimport { initDiceRoller, initDiceInspector } from './diceroll';\n\nexport default {\n  name: 'dnd-dice',\n  setup(props) {\n    const canvas = shallowRef(null);\n    const loaded = shallowRef(document.readyState == 'complete');\n    const results = shallowRef(null);\n\n    if (!loaded.value) window.addEventListener('load', () => loaded.value = true);\n\n    watch([canvas, loaded], ([canvas, loaded]) => {\n      if (!loaded || !canvas) return;\n      initDiceRoller(canvas, results);\n      // initDiceInspector(canvas);\n    });\n\n    return {\n      canvas,\n      results,\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.fontloader {\n  font-family: Roboto;\n  font-weight: bold;\n  position: absolute;\n  opacity: 0;\n}\n\ncanvas {\n  width: 100vw;\n  height: 100vh;\n  font-family: Roboto;\n}\n\n.results {\n  position: absolute;\n  top: 0;\n  left: 0;\n  padding: 1em;\n\n  font-size: 2em;\n  font-weight: bold;\n  font-family: Roboto;\n  text-shadow: 0 0 3px currentColor, 0 0 20px white, 0 0 20px white,\n    0 0 20px white, 0 0 20px white, 0 0 20px white, 0 0 20px white,\n    0 0 20px white, 0 0 20px white, 0 0 20px white, 0 0 20px white,\n    0 0 20px white, 0 0 20px white;\n}\n</style>\n\n<style lang=\"scss\">\nbody {\n  margin: 0;\n  overflow: hidden;\n}\n</style>\n","import { assert } from '@mfro/ts-common/assert';\nimport { Vec3, Quaternion as Quat, ConvexPolyhedron, Shape, Body } from 'cannon-es';\nimport { BufferGeometry, Object3D, Vector2, BufferAttribute, SphereGeometry, Matrix4, Texture, CanvasTexture, MeshStandardMaterial, Matrix3, Vector3, Group, Mesh, ShaderMaterial, UniformsLib, MeshPhysicalMaterial, MixOperation, UniformsUtils, ShaderLib, Shader, Renderer, Material } from 'three';\nimport colorShader from './color.glsl';\n\ntype Random = () => number;\n\ntype GeometryFn = (rounding: number, edgeDetail: number) => BufferGeometry[];\n\nexport interface Vertex {\n  point: Vec3;\n  edges: Edge[];\n  faces: Face[];\n}\n\nexport interface Edge {\n  vertices: [Vertex, Vertex];\n  faces: [Face, Face];\n}\n\nexport namespace Edge {\n  export function otherVertex(e: Edge, v: Vertex) {\n    return e.vertices[1] == v\n      ? e.vertices[0]\n      : e.vertices[1];\n  }\n}\n\nexport interface Face {\n  vertices: Vertex[];\n  edges: Edge[];\n  normal: Vec3;\n}\n\nexport interface Model {\n  vertices: Vertex[];\n  edges: Edge[];\n  faces: Face[];\n}\n\nexport interface DieCtor {\n  (rounding: number, edgeDetail: number): Die;\n}\n\nexport interface Die {\n  model: Model;\n  shape: Shape;\n  texture: Texture;\n  geometry: BufferGeometry[];\n  results: number[];\n}\n\nexport namespace Die {\n  const materials = new Map<Die, MeshPhysicalMaterial>();\n  const shaders = new WeakMap<Material, Shader[]>();\n\n  function getMaterial(die: Die) {\n    let material = materials.get(die);\n    if (material) return material;\n\n    material = new MeshPhysicalMaterial({\n      map: die.texture,\n      visible: true,\n      roughness: 0.5,\n      metalness: 0.1,\n      reflectivity: 1,\n    });\n\n    material.onBeforeCompile = (shader, renderer) => {\n      let list = shaders.get(material!);\n      if (!list) shaders.set(material!, list = []);\n      list.push(shader);\n\n      shader.uniforms['uTime'] = { value: 0 };\n      shader.uniforms['uColor'] = { value: new Vec3(0, 0, 0) };\n      shader.vertexShader = 'varying vec3 mPosition;\\n' + shader.vertexShader;\n      shader.fragmentShader = 'varying vec3 mPosition;\\n' + colorShader + shader.fragmentShader;\n\n      shader.vertexShader = shader.vertexShader\n        .replace('void main() {', `void main() {\\n  mPosition = position;`);\n\n      shader.fragmentShader = shader.fragmentShader\n        .replace('#include <map_fragment>', 'vec4 texelColor = texture2D( map, vUv ); texelColor = mapTexelToLinear( texelColor ); vec4 mfroColor = mfroColorMap(); diffuseColor.a = texelColor.a + mfroColor.a * (1.0 - texelColor.a); diffuseColor.rgb = (mfroColor.rgb * (1.0 - texelColor.a) + texelColor.rgb * texelColor.a) / diffuseColor.a;');\n    };\n\n    materials.set(die, material);\n    return material;\n  }\n\n  export function createObject(die: Die, color: Vec3) {\n    const material = getMaterial(die);\n\n    const object = new Group();\n    object.add(...die.geometry.map(g => {\n      const mesh = new Mesh(g, material);\n      mesh.castShadow = true;\n      return mesh;\n    }));\n\n    object.children[0].onBeforeRender = (renderer, scene, camera, geometry, material, group) => {\n      const list = shaders.get(material);\n      if (!list) return;\n\n      const now = performance.now();\n      for (const shader of list) {\n        shader.uniforms['uTime'].value = now / 1000;\n        shader.uniforms['uColor'].value = color;\n      }\n    };\n\n    return object;\n  }\n\n  export function createBody(die: Die) {\n    return new Body({\n      mass: 1,\n      shape: die.shape,\n    });\n  }\n\n  export function create(die: Die, color: Vec3): DieObject {\n    const body = createBody(die);\n    const object = createObject(die, color);\n\n    return { die, body, object };\n  }\n\n  export function initRoll(o: DieObject | Body, roll: DieRoll) {\n    ('body' in o ? o.body : o).position = roll.position.clone();\n    ('body' in o ? o.body : o).quaternion = roll.orientation.clone();\n    ('body' in o ? o.body : o).velocity = roll.velocity.clone();\n    ('body' in o ? o.body : o).angularVelocity = roll.angularVelocity.clone();\n  }\n\n  export function update(o: DieObject) {\n    o.object.position.set(\n      o.body.position.x,\n      o.body.position.y,\n      o.body.position.z,\n    );\n\n    o.object.quaternion.set(\n      o.body.quaternion.x,\n      o.body.quaternion.y,\n      o.body.quaternion.z,\n      o.body.quaternion.w,\n    );\n  }\n\n  export function resolve(o: { body: Body, die: Die }) {\n    let spin = o.body.angularVelocity.lengthSquared();\n    let velocity = o.body.velocity.lengthSquared();\n    let index = o.die.model.faces.findIndex(f => o.body.quaternion.vmult(f.normal).dot(Vec3.UNIT_Y) < -0.999);\n\n    if ((o.body.type == Body.STATIC || spin < 0.0001 && velocity < 0.0001) && index != -1) {\n      return o.die.results[index];\n    } else {\n      return null;\n    }\n  }\n}\n\nexport interface DieRoll {\n  position: Vec3;\n  orientation: Quat;\n  velocity: Vec3;\n  angularVelocity: Vec3;\n}\n\nexport interface DieObject {\n  die: Die;\n  object: Object3D;\n  body: Body;\n}\n\nexport function randomQuaternion(random: Random) {\n  const u = random();\n  const v = 2 * Math.PI * random();\n  const w = 2 * Math.PI * random();\n\n  return new Quat(\n    Math.sqrt(1 - u) * Math.sin(v),\n    Math.sqrt(1 - u) * Math.cos(v),\n    Math.sqrt(u) * Math.sin(w),\n    Math.sqrt(u) * Math.cos(w),\n  );\n}\n\nfunction defineDieGeometry(m: Model): GeometryFn {\n  return (rounding, edgeDetail) => {\n    function angleCCW(p1: Vec3, p2: Vec3, origin: Vec3, normal: Vec3) {\n      const v1 = p1.vsub(origin);\n      const v2 = p2.vsub(origin);\n      const cosine = Math.min(1, Math.max(-1, v1.dot(v2) / v1.length() / v2.length()));\n      const theta = Math.acos(cosine);\n      const cross = v1.cross(v2).dot(normal);\n\n      if (cross >= 0) {\n        return theta;\n      } else {\n        return Math.PI * 2 - theta;\n      }\n    }\n\n    function sortCCW(points: Vec3[], normal: Vec3) {\n      const center = new Vec3();\n      for (const v of points) center.vadd(v, center);\n      center.scale(1 / points.length, center);\n\n      const ref = points[0];\n      return points.slice().sort((a, b) => {\n        return angleCCW(ref, a, center, normal) - angleCCW(ref, b, center, normal);\n      });\n    }\n\n    const allFaces: [Vec3, Vec3, Vector2][][] = [];\n\n    const vertexCenters = m.vertices.map(v => {\n      const A = new Matrix3().set(\n        v.faces[0].normal.x, v.faces[0].normal.y, v.faces[0].normal.z,\n        v.faces[1].normal.x, v.faces[1].normal.y, v.faces[1].normal.z,\n        v.faces[2].normal.x, v.faces[2].normal.y, v.faces[2].normal.z,\n      );\n\n      A.invert();\n\n      const B = new Vector3(-rounding, -rounding, -rounding);\n      const x = B.applyMatrix3(A);\n      const y = new Vec3(x.x, x.y, x.z);\n\n      assert(v.faces.every(f => Math.abs(f.normal.dot(y) + rounding) < 1e-6), 'rounding');\n\n      return v.point.vadd(y);\n    });\n\n    for (const edge of m.edges) {\n      const o1 = vertexCenters[m.vertices.indexOf(edge.vertices[0])];\n      const o2 = vertexCenters[m.vertices.indexOf(edge.vertices[1])];\n\n      const q1 = new Quat().setFromVectors(edge.faces[0].normal, edge.faces[0].normal);\n      const q2 = new Quat().setFromVectors(edge.faces[0].normal, edge.faces[1].normal);\n      const q = new Quat();\n\n      const a = q1.vmult(Vec3.UNIT_X);\n      const b = q2.vmult(Vec3.UNIT_X);\n\n      const width = Math.acos(a.dot(b)) * rounding / edgeDetail;\n      const height = o1.vsub(o2).length();\n\n      for (let i = 0; i < edgeDetail; ++i) {\n        q1.slerp(q2, i / edgeDetail, q);\n        const v11 = o1.vadd(q.vmult(edge.faces[0].normal.scale(rounding)));\n        const v21 = o2.vadd(q.vmult(edge.faces[0].normal.scale(rounding)));\n        const normal1 = q.vmult(edge.faces[0].normal);\n\n        q1.slerp(q2, (i + 1) / edgeDetail, q);\n        const v12 = o1.vadd(q.vmult(edge.faces[0].normal.scale(rounding)));\n        const v22 = o2.vadd(q.vmult(edge.faces[0].normal.scale(rounding)));\n        const normal2 = q.vmult(edge.faces[0].normal);\n\n        q1.slerp(q2, (i + 0.5) / edgeDetail, q);\n        const normal = q.vmult(edge.faces[0].normal);\n\n        const points = [v11, v21, v22, v12];\n        const normals = [normal1, normal1, normal2, normal2];\n\n        const test = v21.vsub(v11).cross(v12.vsub(v11));\n        if (test.dot(normal) < 0) {\n          points.reverse();\n          normals.reverse();\n        }\n\n        allFaces.push(points.map((p, i) => [p, normals[i], new Vector2]));\n      }\n    }\n\n    for (let i = 0; i < m.faces.length; ++i) {\n      const inset = m.faces[i].vertices.map(v => vertexCenters[m.vertices.indexOf(v)].vadd(m.faces[i].normal.scale(rounding)));\n      const ccw = sortCCW(inset, m.faces[i].normal);\n\n      const center = new Vec3();\n      for (const v of ccw) center.vadd(v, center);\n      center.scale(1 / ccw.length, center);\n\n      const u0 = ccw[1].vsub(center).unit();\n      const u1 = u0.cross(m.faces[i].normal);\n\n      const offsets = ccw.map(c => {\n        const diff = c.vsub(center);\n        const x = diff.dot(u1);\n        const y = diff.dot(u0);\n\n        return [c, new Vector2(x, y)] as [Vec3, Vector2];\n      });\n\n      const min = offsets.reduce((min, v) => new Vector2(Math.min(min.x, v[1].x), Math.min(min.y, v[1].y)), new Vector2);\n      const max = offsets.reduce((max, v) => new Vector2(Math.max(max.x, v[1].x), Math.max(max.y, v[1].y)), new Vector2);\n\n      const range = Math.max(-min.x, -min.y, max.x, max.y);\n\n      for (const o of offsets) {\n        o[1].multiplyScalar(1 / range);\n        o[1].x = (o[1].x / 2 + 0.5 + i) / m.faces.length;\n        o[1].y = o[1].y / 2 + 0.5;\n      }\n\n      allFaces.push(offsets.map(v => [v[0], m.faces[i].normal, v[1]]));\n    }\n\n    const threeTextures: number[] = [];\n    const threeVertices: number[] = [];\n    const threeNormals: number[] = [];\n    const threeFaces: number[] = [];\n\n    for (let i = 0; i < allFaces.length; ++i) {\n      const i0 = threeVertices.length / 3;\n\n      for (const [v, n, uv] of allFaces[i]) {\n        threeVertices.push(v.x, v.y, v.z);\n        threeTextures.push(uv.x, uv.y);\n        threeNormals.push(n.x, n.y, n.z);\n      }\n\n      threeFaces.push(i0, i0 + 1, i0 + 2);\n      if (allFaces[i].length >= 4) threeFaces.push(i0 + 2, i0 + 3, i0 + 0);\n      if (allFaces[i].length >= 5) threeFaces.push(i0 + 3, i0 + 4, i0 + 0);\n    }\n\n    const geometries: BufferGeometry[] = [];\n\n    const geometry = new BufferGeometry();\n    geometry.setAttribute('position', new BufferAttribute(new Float32Array(threeVertices), 3));\n    geometry.setAttribute('normal', new BufferAttribute(new Float32Array(threeNormals), 3));\n    geometry.setAttribute('uv', new BufferAttribute(new Float32Array(threeTextures), 2));\n    geometry.setIndex(threeFaces);\n\n    geometries.push(geometry);\n\n    for (const v of vertexCenters) {\n      const sphere = new SphereGeometry(rounding);\n      sphere.translate(v.x, v.y, v.z);\n      const matrix = new Matrix4();\n      matrix.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n      sphere.attributes.uv.applyMatrix4(matrix);\n      geometries.push(sphere);\n    }\n\n    return geometries;\n  };\n}\n\nfunction defineDieShape(m: Model): Shape {\n  return new ConvexPolyhedron({\n    vertices: m.vertices.map(v => v.point),\n    normals: m.faces.map(f => f.normal),\n    faces: m.faces.map(f => f.vertices.map(v => m.vertices.indexOf(v))),\n  });\n}\n\nfunction defineDieModel(numFaces: number, fn: (scale: number) => [Vec3[], ...number[]]): Model {\n  const [points, ...edgeLengths] = fn(1);\n\n  const vertices: Vertex[] = [];\n  const edges: Edge[] = [];\n  const faces: Face[] = [];\n\n  for (let i1 = 0; i1 < points.length; ++i1) {\n    const v1: Vertex = {\n      point: points[i1],\n      edges: [],\n      faces: [],\n    };\n\n    vertices.push(v1);\n\n    for (let i2 = 0; i2 < i1; ++i2) {\n      const v2 = vertices[i2];\n\n      const distance = v1.point.vsub(v2.point);\n      if (edgeLengths.some(l => Math.abs(l - distance.length()) < 1e-6)) {\n        const edge: Edge = {\n          vertices: [v1, v2],\n          faces: [] as any\n        };\n\n        v1.edges.push(edge);\n        v2.edges.push(edge);\n        edges.push(edge);\n      }\n    }\n  }\n\n  function findFaces(target: Vertex, origin: Vertex, maxDepth: number) {\n    const cycles = [];\n    const queue = [\n      [origin, []] as [Vertex, Edge[]],\n    ];\n\n    while (queue.length > 0) {\n      const [node, path] = queue.pop()!;\n\n      for (const edge of node.edges) {\n        const next = Edge.otherVertex(edge, node);\n        if (path.includes(edge)) continue;\n\n        if (next == target) {\n          cycles.push([...path, edge]);\n        } else if (path.length + 1 < maxDepth) {\n          queue.push([next, [...path, edge]]);\n        }\n      }\n    }\n\n    return cycles;\n  }\n\n  const edgesPerFace = 2 * edges.length / numFaces;\n\n  const allFaces = [];\n  for (const v of vertices) {\n    allFaces.push(...findFaces(v, v, edgesPerFace));\n  }\n\n  for (const faceEdges of allFaces) {\n    const set = new Set<Vertex>();\n    for (const e of faceEdges) for (const p of e.vertices) set.add(p);\n    const faceVertices = [...set];\n\n    const normal = (faceVertices[1].point.vsub(faceVertices[0].point)).cross(faceVertices[2].point.vsub(faceVertices[0].point)).unit();\n    if (faces.find(f => f.normal.almostEquals(normal))) continue;\n\n    const center = new Vec3();\n    for (const v of faceVertices) center.vadd(v.point, center);\n    center.scale(1 / faceVertices.length, center);\n\n    if (center.dot(normal) < 0) continue;\n\n    const face = {\n      normal,\n      edges: faceEdges,\n      vertices: faceVertices,\n    };\n\n    for (const v of faceVertices) v.faces.push(face);\n    for (const e of faceEdges) e.faces.push(face);\n    faces.push(face);\n  }\n\n  assert(edges.every(e => e.faces.length == 2), 'valid die');\n  return { vertices, edges, faces };\n}\n\nfunction defineDieTexture(m: Model, fn: (ctx: CanvasRenderingContext2D, face: (text: string, face: number, rotation: number, offset: number) => void) => void): () => Texture {\n  return () => {\n    const canvas = document.createElement('canvas');\n    canvas.width = m.faces.length * 512;\n    canvas.height = 512;\n\n    const context = canvas.getContext('2d');\n    assert(context != null, 'context');\n\n    // context.fillStyle = '#333';\n    // context.fillRect(0, 0, m.faces.length * 512, 512);\n    context.clearRect(0, 0, m.faces.length * 512, 512);\n\n    context.fillStyle = '#eee';\n    context.textAlign = 'center';\n    context.textBaseline = 'middle';\n\n    fn(context, (text, face, rotation, offset) => {\n      context.translate(256 + 512 * face, 256);\n      context.rotate(rotation * Math.PI);\n      context.translate(0, offset);\n      context.fillText(text, 0, 0);\n      context.resetTransform();\n    });\n\n    const texture = new CanvasTexture(canvas);\n    return texture;\n  };\n}\n\nfunction defineDie(model: Model, shape: Shape, textureFn: () => Texture, geometryFn: GeometryFn, results: number[]) {\n  return (rounding: number, edgeDetail: number): Die => {\n    const texture = textureFn();\n    const geometry = geometryFn(rounding, edgeDetail);\n\n    return { model, shape, texture, geometry, results };\n  };\n}\n\nexport const d4Model = defineDieModel(4, scale => {\n  const edge = scale * 20 / 16;\n\n  const q2 = new Quat().setFromAxisAngle(Vec3.UNIT_Z, -Math.acos(-1 / 3));\n  const q3 = new Quat().setFromAxisAngle(Vec3.UNIT_Y, Math.PI * 2 / 3).mult(q2);\n  const q4 = new Quat().setFromAxisAngle(Vec3.UNIT_Y, -Math.PI * 2 / 3).mult(q2);\n\n  const leg = Vec3.UNIT_Y.scale(edge * Math.sqrt(6) / 4);\n\n  const points = [\n    leg,\n    q2.vmult(leg),\n    q3.vmult(leg),\n    q4.vmult(leg),\n  ];\n\n  return [points, edge];\n});\n\nexport const d4Shape = defineDieShape(d4Model);\n\nexport const d4Texture = defineDieTexture(d4Model, (ctx, face) => {\n  ctx.font = 'bold 130px Roboto';\n\n  face('1', 0, 0, -125);\n  face('2', 0, 2 / 3, -125);\n  face('3', 0, 4 / 3, -125);\n\n  face('1', 1, 0, -125);\n  face('4', 1, 4 / 3, -125);\n  face('3', 1, 2 / 3, -125);\n\n  face('1', 2, 0, -125);\n  face('4', 2, 2 / 3, -125);\n  face('2', 2, 4 / 3, -125);\n\n  face('4', 3, 0, -125);\n  face('2', 3, 4 / 3, -125);\n  face('3', 3, 2 / 3, -125);\n});\n\nexport const d4Geometry = defineDieGeometry(d4Model);\n\nexport const d4Results = [4, 2, 3, 1];\n\nexport const d4 = defineDie(d4Model, d4Shape, d4Texture, d4Geometry, d4Results);\n\nexport const d6Model = defineDieModel(6, scale => {\n  const edge = scale;\n\n  const points = [];\n  for (let i = 0; i < 8; ++i) {\n    points.push(new Vec3(\n      (i & 0b001) ? edge / 2 : -edge / 2,\n      (i & 0b010) ? edge / 2 : -edge / 2,\n      (i & 0b100) ? edge / 2 : -edge / 2,\n    ));\n  }\n\n  return [points, edge];\n});\n\nexport const d6Shape = defineDieShape(d6Model);\n\nexport const d6Texture = defineDieTexture(d6Model, (ctx, face) => {\n  ctx.font = 'bold 240px Roboto';\n\n  face('1', 0, 3 / 4, 20);\n  face('2', 2, 1 / 4, 20);\n  face('3', 1, 7 / 4, 20);\n\n  face('4', 3, 1 / 4, 20);\n  face('5', 5, 7 / 4, 20);\n  face('6', 4, 1 / 4, 20);\n});\n\nexport const d6Geometry = defineDieGeometry(d6Model);\n\nexport const d6Results = [6, 4, 5, 3, 1, 2];\n\nexport const d6 = defineDie(d6Model, d6Shape, d6Texture, d6Geometry, d6Results);\n\nexport const d8Model = defineDieModel(8, scale => {\n  const edge = scale * 18.5 / 16;\n\n  const x = edge / Math.SQRT2;\n  const points = [\n    new Vec3(+x, 0, 0),\n    new Vec3(-x, 0, 0),\n    new Vec3(0, +x, 0),\n    new Vec3(0, -x, 0),\n    new Vec3(0, 0, +x),\n    new Vec3(0, 0, -x),\n  ];\n\n  return [points, edge];\n});\n\nexport const d8Shape = defineDieShape(d8Model);\n\nexport const d8Texture = defineDieTexture(d8Model, (ctx, face) => {\n  ctx.font = 'bold 200px Roboto';\n\n  face('1', 0, 4 / 3, 0);\n  face('2', 1, 4 / 3, 0);\n  face('3', 2, 2 / 3, 0);\n  face('4', 3, 2 / 3, 0);\n\n  face('5', 5, 4 / 3, 0);\n  face('6', 4, 4 / 3, 0);\n  face('7', 6, 2 / 3, 0);\n  face('8', 7, 2 / 3, 0);\n});\n\nexport const d8Geometry = defineDieGeometry(d8Model);\n\nexport const d8Results = [8, 7, 6, 5, 3, 4, 2, 1];\n\nexport const d8 = defineDie(d8Model, d8Shape, d8Texture, d8Geometry, d8Results);\n\nexport const d10Model = defineDieModel(10, scale => {\n  const edge1 = scale;\n\n  const theta = Math.PI * 2 / 5;\n  const a1 = Math.PI * .27;\n\n  const r1 = Math.sin(a1) * edge1;\n  const h1 = Math.cos(a1) * edge1;\n\n  const r2 = Math.cos(theta / 2) * r1;\n  const a2 = Math.atan(r2 / h1);\n  const a3 = Math.PI - a1 - a2;\n\n  const lawOfSines = edge1 / Math.sin(a2);\n  const height = lawOfSines * Math.sin(a3);\n\n  const legLength = Math.sqrt(height * height / 4 + edge1 * edge1 - height * edge1 * Math.cos(a1));\n  const legAngle1 = Math.asin(edge1 * Math.sin(a1) / legLength);\n  const legAngle2 = Math.PI / 2 - legAngle1;\n\n  const q1 = new Quat().setFromAxisAngle(Vec3.UNIT_Y, theta);\n  const q2 = new Quat().setFromAxisAngle(Vec3.UNIT_Z, legAngle2);\n\n  const tall = Vec3.UNIT_Y.scale(height / 2);\n  const leg = Vec3.UNIT_X.scale(legLength);\n\n  const points = [\n    tall,\n    q2.vmult(leg),\n    q1.vmult(q2.vmult(leg)),\n    q1.vmult(q1.vmult(q2.vmult(leg))),\n    q1.vmult(q1.vmult(q1.vmult(q2.vmult(leg)))),\n    q1.vmult(q1.vmult(q1.vmult(q1.vmult(q2.vmult(leg))))),\n    tall.negate(),\n    q2.vmult(leg.negate()),\n    q1.vmult(q2.vmult(leg.negate())),\n    q1.vmult(q1.vmult(q2.vmult(leg.negate()))),\n    q1.vmult(q1.vmult(q1.vmult(q2.vmult(leg.negate())))),\n    q1.vmult(q1.vmult(q1.vmult(q1.vmult(q2.vmult(leg.negate()))))),\n  ];\n\n  return [points, points[1].vsub(points[0]).length(), points[7].vsub(points[3]).length()];\n});\n\nexport const d10Shape = defineDieShape(d10Model);\n\nexport const d10Texture = defineDieTexture(d10Model, (ctx, face) => {\n  ctx.font = 'bold 160px Roboto';\n\n  face('1', 0, 0, 0);\n  face('2', 8, 1, 0);\n  face('3', 4, 0, 0);\n  face('4', 5, 1, 0);\n  face('5', 2, 0, 0);\n\n  face('6', 9, 1, 0);\n  face('7', 1, 0, 0);\n  face('8', 7, 1, 0);\n  face('9', 3, 0, 0);\n  face('10', 6, 1, 0);\n});\n\nexport const d10Geometry = defineDieGeometry(d10Model);\n\nexport const d10Results = [10, 4, 6, 2, 8, 7, 1, 3, 9, 5];\n\nexport const d10 = defineDie(d10Model, d10Shape, d10Texture, d10Geometry, d10Results);\n\nexport const d12Model = defineDieModel(12, scale => {\n  const edge = scale * 0.5;\n  const phi = (1 + Math.sqrt(5)) / 2;\n\n  const points = [\n    new Vec3(1, 1, 1),\n    new Vec3(-1, 1, 1),\n    new Vec3(1, -1, 1),\n    new Vec3(1, 1, -1),\n    new Vec3(-1, -1, 1),\n    new Vec3(1, -1, -1),\n    new Vec3(-1, 1, -1),\n    new Vec3(-1, -1, -1),\n\n    new Vec3(0, phi, 1 / phi),\n    new Vec3(0, -phi, 1 / phi),\n    new Vec3(0, phi, -1 / phi),\n    new Vec3(0, -phi, -1 / phi),\n\n    new Vec3(1 / phi, 0, phi),\n    new Vec3(1 / phi, 0, -phi),\n    new Vec3(-1 / phi, 0, phi),\n    new Vec3(-1 / phi, 0, -phi),\n\n    new Vec3(phi, 1 / phi, 0),\n    new Vec3(-phi, 1 / phi, 0),\n    new Vec3(phi, -1 / phi, 0),\n    new Vec3(-phi, -1 / phi, 0),\n  ];\n\n  for (const point of points) point.scale(edge * phi / 2, point);\n\n  return [points, edge];\n});\n\nexport const d12Shape = defineDieShape(d12Model);\n\nexport const d12Geometry = defineDieGeometry(d12Model);\n\nexport const d12Texture = defineDieTexture(d12Model, (ctx, face) => {\n  ctx.font = 'bold 240px Roboto';\n\n  face('1', 0, 0, 20);\n  face('2', 2, 8 / 5, 20);\n  face('3', 1, 2 / 5, 20);\n  face('4', 7, 0, 20);\n  face('5', 6, 6 / 5, 20);\n  face('6', 5, 6 / 5, 20);\n\n  face('7', 3, 8 / 5, 20);\n  face('8', 8, 8 / 5, 20);\n  face('9', 4, 4 / 5, 20);\n  face('10', 10, 4 / 5, 20);\n  face('11', 9, 8 / 5, 20);\n  face('12', 11, 6 / 5, 20);\n});\n\nexport const d12Results = [12, 10, 11, 6, 4, 7, 8, 9, 5, 2, 3, 1];\n\nexport const d12 = defineDie(d12Model, d12Shape, d12Texture, d12Geometry, d12Results);\n\nexport const d20Model = defineDieModel(20, scale => {\n  const edge = scale * 0.8;\n  const phi = (1 + Math.sqrt(5)) / 2;\n\n  const points = [\n    new Vec3(0, 1, phi),\n    new Vec3(0, -1, phi),\n    new Vec3(0, 1, -phi),\n    new Vec3(0, -1, -phi),\n\n    new Vec3(1, phi, 0),\n    new Vec3(-1, phi, 0),\n    new Vec3(1, -phi, 0),\n    new Vec3(-1, -phi, 0),\n\n    new Vec3(phi, 0, 1),\n    new Vec3(phi, 0, -1),\n    new Vec3(-phi, 0, 1),\n    new Vec3(-phi, 0, -1),\n  ];\n\n  for (const point of points) point.scale(edge / 2, point);\n\n  return [points, 20, edge];\n});\n\nexport const d20Shape = defineDieShape(d20Model);\n\nexport const d20Geometry = defineDieGeometry(d20Model);\n\nexport const d20Texture = defineDieTexture(d20Model, (ctx, face) => {\n  ctx.font = 'bold 180px Roboto';\n\n  face('1', 0, 0, 35);\n  face('2', 12, 0, 35);\n  face('3', 1, 2 / 3, 35);\n  face('4', 13, 2 / 3, 35);\n  face('5', 10, 0, 35);\n  face('6', 7, 0, 35);\n  face('7', 2, 4 / 3, 35);\n  face('8', 18, 2 / 3, 35);\n  face('9', 6, 2 / 3, 35);\n  face('10', 16, 0, 35);\n\n  face('11', 19, 0, 35);\n  face('12', 9, 4 / 3, 35);\n  face('13', 17, 4 / 3, 35);\n  face('14', 14, 2 / 3, 35);\n  face('15', 11, 0, 35);\n  face('16', 5, 0, 35);\n  face('17', 3, 4 / 3, 35);\n  face('18', 8, 2 / 3, 35);\n  face('19', 4, 2 / 3, 35);\n  face('20', 15, 0, 35);\n});\n\nexport const d20Results = [20, 18, 14, 4, 2, 5, 12, 15, 3, 9, 16, 6, 19, 17, 7, 1, 11, 8, 13, 10];\n\nexport const d20 = defineDie(d20Model, d20Shape, d20Texture, d20Geometry, d20Results);\n","export default \"uniform float uTime;\\nuniform vec3 uColor;\\n\\nfloat mod289(float x){return x - floor(x * (1.0 / 289.0)) * 289.0;}\\nvec4 mod289(vec4 x){return x - floor(x * (1.0 / 289.0)) * 289.0;}\\nvec4 perm(vec4 x){return mod289(((x * 34.0) + 1.0) * x);}\\n\\nfloat noise(vec3 p){\\n    vec3 a = floor(p);\\n    vec3 d = p - a;\\n    d = d * d * (3.0 - 2.0 * d);\\n\\n    vec4 b = a.xxyy + vec4(0.0, 1.0, 0.0, 1.0);\\n    vec4 k1 = perm(b.xyxy);\\n    vec4 k2 = perm(k1.xyxy + b.zzww);\\n\\n    vec4 c = k2 + a.zzzz;\\n    vec4 k3 = perm(c);\\n    vec4 k4 = perm(c + 1.0);\\n\\n    vec4 o1 = fract(k3 * (1.0 / 41.0));\\n    vec4 o2 = fract(k4 * (1.0 / 41.0));\\n\\n    vec4 o3 = o2 * d.z + o1 * (1.0 - d.z);\\n    vec2 o4 = o3.yw * d.x + o3.xz * (1.0 - d.x);\\n\\n    return o4.y * d.y + o4.x * (1.0 - d.y);\\n}\\n\\nfloat ulerp(float x0, float x1, float x) {\\n  return (x - x0) * (1.0 / (x1 - x0));\\n}\\n\\nstruct GradientStop { float value; vec4 color; };\\n\\n#define GRADIENT(result, N, VALUE, STOPS){                                \\\\\\n  float _v = VALUE;                                                       \\\\\\n  GradientStop _s[N] = GradientStop[N] STOPS;                             \\\\\\n  int index = 0;                                                          \\\\\\n  while (_v > _s[index + 1].value) index += 1;                            \\\\\\n                                                                          \\\\\\n  float v = ulerp(_s[index].value, _s[index + 1].value, _v);              \\\\\\n  result = mix(_s[index].color, _s[index + 1].color, v);                  \\\\\\n}\\n\\n// white on black smoky pattern\\nvec4 design0() {\\n  float value = noise(mPosition * 2.4 + uTime * 0.2);\\n\\n  vec4 c0 = vec4(uColor * 0.05, 1.0);\\n  vec4 c1 = vec4(uColor * 0.5, 1.0);\\n  vec4 c2 = vec4(uColor, 1.0);\\n  // vec4 c1 = vec4(mix(uColor, vec3(0.0, 0.0, 0.0), 0.2), 1.0);\\n  // vec4 c2 = vec4(mix(uColor, vec3(0.0, 0.0, 0.0), 1.0), 1.0);\\n  // vec4 c1 = vec4(mix(uColor, vec3(1.0, 1.0, 1.0), 0.1), 1.0);\\n  // vec4 c2 = vec4(mix(uColor, vec3(1.0, 1.0, 1.0), 0.2), 1.0);\\n  // vec4 c0 = vec4(vec3(0.0, 0.0, 0.0), 1.0);\\n  // vec4 c1 = vec4(vec3(0.0, 0.0, 0.0), 1.0);\\n  // vec4 c2 = vec4(vec3(0.0, 0.0, 0.0), 1.0);\\n\\n  vec4 color;\\n  GRADIENT(color, 5, value, (\\n    GradientStop(0.0, c0),\\n    GradientStop(0.44, c1),\\n    GradientStop(0.5, c2),\\n    GradientStop(0.56, c1),\\n    GradientStop(1.0, c0)\\n  ));\\n\\n  return color;\\n}\\n\\nvec4 design1() {\\n  float value = noise(mPosition * 4.0 + uTime * 0.2);\\n\\n  vec4 c1 = vec4(0.6, 0.6, 1.0, 1.0);\\n  vec4 c0 = vec4(c1.rgb, 0.0);\\n\\n  vec4 color;\\n  GRADIENT(color, 3, value, (\\n    GradientStop(0.0, c0),\\n    GradientStop(0.6, c0),\\n    GradientStop(1.0, c1)\\n  ));\\n\\n  return color;\\n}\\n\\nvec4 design2() {\\n  float value = noise(mPosition * 4.0 + uTime * 0.2 + 200.0);\\n\\n  vec4 c1 = vec4(0.6, 1.0, 0.6, 1.0);\\n  vec4 c0 = vec4(c1.rgb, 0.0);\\n\\n  vec4 color;\\n  GRADIENT(color, 3, value, (\\n    GradientStop(0.0, c0),\\n    GradientStop(0.6, c0),\\n    GradientStop(1.0, c1)\\n  ));\\n\\n  return color;\\n}\\n\\nvec4 design3() {\\n  float value = noise(mPosition * 4.0 + uTime * 0.2 + 400.0);\\n\\n  vec4 c1 = vec4(1.0, 0.6, 0.6, 1.0);\\n  vec4 c0 = vec4(c1.rgb, 0.0);\\n\\n  vec4 color;\\n  GRADIENT(color, 3, value, (\\n    GradientStop(0.0, c0),\\n    GradientStop(0.6, c0),\\n    GradientStop(1.0, c1)\\n  ));\\n\\n  return color;\\n}\\n\\nvec4 overlay(vec4 base, vec4 overlay) {\\n  float alpha = overlay.a + base.a * (1.0 - overlay.a);\\n  vec3 color = (base.rgb * (1.0 - overlay.a) + overlay.rgb * overlay.a) / alpha;\\n\\n  return vec4(color, alpha);\\n}\\n\\nvec4 mfroColorMap() {\\n  vec4 a = design0();\\n  // vec4 b = design1();\\n  // vec4 c = design2();\\n  // vec4 d = design3();\\n\\n  return a;\\n}\\n\";","import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { Body, ContactMaterial, Material, Plane, Vec3, World, Quaternion as Quat } from 'cannon-es';\nimport { AmbientLight, DirectionalLight, Mesh, Object3D, PCFSoftShadowMap, PerspectiveCamera, PlaneGeometry, Quaternion, Scene, ShadowMaterial, Vector2, Vector3, WebGLRenderer } from 'three';\n\nimport { DieRoll, DieObject, Die, d4, d6, d8, d10, d12, d20, randomQuaternion } from './dice';\nimport { Ref } from 'vue';\n\nconst color = new Vec3(0.35, 0.35, 0.35);\n\ninterface Dice {\n  // d4: Die;\n  d6: Die;\n  // d8: Die;\n  // d10: Die;\n  // d12: Die;\n  // d20: Die;\n}\n\ninterface Picker {\n  die: Die;\n  object: Object3D;\n  position: Vector2;\n  orientation: Quaternion;\n  rotation: number;\n}\n\nfunction loadDice() {\n  return {\n    d4: d4(0.05, 5),\n    d6: d6(0.09, 5),\n    d8: d8(0.09, 5),\n    d10: d10(0.09, 5),\n    d12: d12(0.09, 5),\n    d20: d20(0.09, 5),\n  };\n}\n\nfunction rollDie(position: Vec3): DieRoll {\n  const orientation = randomQuaternion(Math.random);\n\n  const velDir = Math.random() * Math.PI * 2;\n  const velocity = new Vec3(Math.cos(velDir), 0, Math.sin(velDir)).scale(3)\n    .vadd(new Vec3(8, 0, 0));\n\n  const spinDir = randomQuaternion(Math.random);\n  const angularVelocity = spinDir.vmult(Vec3.UNIT_Y.scale(30));\n\n  return {\n    position,\n    orientation,\n    velocity,\n    angularVelocity\n  };\n}\n\nfunction initScene(canvas: HTMLCanvasElement) {\n  const scene = new Scene();\n  // const camera = new OrthographicCamera(-canvas.width / 300, canvas.width / 300, canvas.height / 300, -canvas.height / 300);\n  // camera.position.set(0, 100, 0);\n  // camera.lookAt(0, 0, 0);\n\n  const viewport = new Vector2(canvas.width / canvas.height * 9, 9);\n\n  const height = 25;\n  const fov = 2 * Math.atan(viewport.y / 2 / height);\n\n  const camera = new PerspectiveCamera(fov * 180 / Math.PI, viewport.x / viewport.y, 0.1, 1000);\n  camera.position.set(0, height, 0);\n  camera.lookAt(0, 0, 0);\n\n  // const viewport = new Vector3(1, -1, -1);\n  // viewport.unproject(camera);\n  // viewport.sub(camera.position);\n  // viewport.normalize();\n  // viewport.multiplyScalar((-camera.position.y + 2) / viewport.y);\n  // viewport.add(camera.position);\n\n  const renderer = new WebGLRenderer({\n    canvas,\n    alpha: true,\n    antialias: true,\n  });\n  renderer.shadowMap.enabled = true;\n  renderer.shadowMap.type = PCFSoftShadowMap;\n\n  const ambientLight = new AmbientLight(0xFFFFFF, 0.4);\n  scene.add(ambientLight);\n\n  const halfDiagonal = Math.sqrt(viewport.x * viewport.x / 4 + viewport.y * viewport.y / 4);\n\n  const directionalLight1 = new DirectionalLight(0xFFFFFF, 0.6);\n  directionalLight1.position.set(2, 4, -1);\n  directionalLight1.shadow.mapSize.width = 4 * canvas.width;\n  directionalLight1.shadow.mapSize.height = 4 * canvas.height;\n  directionalLight1.shadow.camera.near = -2 * halfDiagonal;\n  directionalLight1.shadow.camera.far = 2 * halfDiagonal;\n  directionalLight1.shadow.camera.top = halfDiagonal;\n  directionalLight1.shadow.camera.bottom = -halfDiagonal;\n  directionalLight1.shadow.camera.left = -halfDiagonal;\n  directionalLight1.shadow.camera.right = halfDiagonal;\n  directionalLight1.castShadow = true;\n  scene.add(directionalLight1);\n\n  const tableGeometry = new PlaneGeometry(viewport.x, viewport.y);\n  const tableMaterial = new ShadowMaterial({ opacity: 0.5 });\n  const table = new Mesh(tableGeometry, tableMaterial);\n  table.rotateX(-Math.PI / 2);\n  table.castShadow = false;\n  table.receiveShadow = true;\n  scene.add(table);\n\n  return { scene, camera, renderer, viewport };\n}\n\nfunction initWorld(viewport: Vector2) {\n  const world = new World({\n    gravity: new Vec3(0, -30, 0),\n  });\n\n  const wallMaterial = new Material();\n  const floorMaterial = new Material();\n\n  const floor = new Body({\n    type: Body.STATIC,\n    shape: new Plane(),\n    position: new Vec3(0, 0, 0),\n    quaternion: new Quat().setFromVectors(Vec3.UNIT_Z, Vec3.UNIT_Y),\n    material: floorMaterial,\n  });\n\n  const walls = [\n    new Body({\n      type: Body.STATIC,\n      shape: new Plane(),\n      position: new Vec3(-viewport.x / 2, 0, 0),\n      quaternion: new Quat().setFromVectors(Vec3.UNIT_Z, Vec3.UNIT_X),\n      material: wallMaterial,\n    }),\n    new Body({\n      type: Body.STATIC,\n      shape: new Plane(),\n      position: new Vec3(+viewport.x / 2, 0, 0),\n      quaternion: new Quat().setFromVectors(Vec3.UNIT_Z, Vec3.UNIT_X.negate()),\n      material: wallMaterial,\n    }),\n    new Body({\n      type: Body.STATIC,\n      shape: new Plane(),\n      position: new Vec3(0, 0, -viewport.y / 2),\n      quaternion: new Quat().setFromVectors(Vec3.UNIT_Z, Vec3.UNIT_Z),\n      material: wallMaterial,\n    }),\n    new Body({\n      type: Body.STATIC,\n      shape: new Plane(),\n      position: new Vec3(0, 0, +viewport.y / 2),\n      quaternion: new Quat().setFromVectors(Vec3.UNIT_Z, Vec3.UNIT_Z.negate()),\n      material: wallMaterial,\n    }),\n  ];\n\n  world.addBody(floor);\n  for (const body of walls) world.addBody(body);\n\n  world.addContactMaterial(new ContactMaterial(world.defaultMaterial, wallMaterial, { friction: 0 }));\n  world.addContactMaterial(new ContactMaterial(world.defaultMaterial, floorMaterial, { friction: 0.04 }));\n  world.addContactMaterial(new ContactMaterial(world.defaultMaterial, world.defaultMaterial, { friction: 0 }));\n\n  return { world, walls, floor };\n}\n\nexport function initDiceRoller(canvas: HTMLCanvasElement, results: Ref<null | number[]>): any {\n  const dice = loadDice();\n\n  const box = canvas.getBoundingClientRect();\n  canvas.width = box.width;\n  canvas.height = box.height;\n\n  const { scene, camera, renderer, viewport } = initScene(canvas);\n  const { world, floor, walls } = initWorld(viewport);\n\n  // const orbit = new OrbitControls(camera, canvas);\n\n  const objects: (DieObject & { t0: number })[] = [];\n\n  const allDice = Reflect.ownKeys(dice).map(k => dice[k as keyof Dice]);\n  const pickers = allDice.map((die, i) => {\n    const position = new Vector2(\n      -viewport.x / 2 + 0.5,\n      1 * ((i + 0.5) - allDice.length / 2),\n    );\n\n    const object = Die.createObject(die, color);\n    object.position.set(position.x, 0, position.y);\n    object.position.lerp(camera.position, 0.3);\n    object.scale.set(0.5, 0.5, 0.5);\n\n    const rotation = new Quaternion().setFromUnitVectors(\n      new Vector3(die.model.faces[0].normal.x, die.model.faces[0].normal.y, die.model.faces[0].normal.z),\n      new Vector3(0, -1, 0)\n    );\n\n    const center = new Vec3();\n    for (const v of die.model.faces[0].vertices) center.vadd(v.point, center);\n    center.scale(1 / die.model.faces[0].vertices.length, center);\n\n    const b = new Vector3();\n    b.copy(die.model.faces[0].vertices[1].point as any);\n    b.sub(center as any);\n    b.normalize();\n    b.applyQuaternion(rotation);\n\n    const q = new Quaternion();\n    if (die.model.faces.length == 6)\n      q.setFromAxisAngle(new Vector3(0, 1, 0), Math.PI * 5 / 4);\n\n    else if (die.model.faces.length == 8)\n      q.setFromAxisAngle(new Vector3(0, 1, 0), Math.PI * 2 / 3);\n\n    q.multiply(new Quaternion().setFromUnitVectors(b, new Vector3(0, 0, 1)));\n    q.multiply(rotation);\n    q.normalize();\n\n    object.quaternion.copy(q);\n    scene.add(object);\n\n    return {\n      die,\n      object,\n      position,\n      orientation: q,\n      rotation: 0,\n    };\n  });\n\n  function hitTest(x: number, y: number) {\n    const pos = new Vector2(\n      (x / canvas.width - 0.5) * viewport.x,\n      (y / canvas.height - 0.5) * viewport.y,\n    );\n\n    const offset = new Vector2();\n    for (const picker of pickers) {\n      offset.copy(pos);\n      offset.sub(picker.position);\n\n      if (offset.length() < 0.5) {\n        return picker;\n      }\n    }\n\n    return null;\n  }\n\n  function add(die: Die, position: Vec3) {\n    const o = Die.create(die, color);\n    objects.push({ ...o, t0: time });\n    scene.add(o.object);\n    world.addBody(o.body);\n\n    const roll = rollDie(position);\n    Die.initRoll(o, roll);\n    Die.update(o);\n  }\n\n  let picking: Picker | null = null;\n  function onMouseEvent(e: MouseEvent) {\n    picking = hitTest(e.offsetX, e.offsetY);\n  }\n\n  canvas.addEventListener('mouseenter', onMouseEvent);\n  canvas.addEventListener('mouseleave', onMouseEvent);\n  canvas.addEventListener('mousemove', onMouseEvent);\n\n  canvas.addEventListener('click', e => {\n    const pick = hitTest(e.offsetX, e.offsetY);\n    if (pick == null) return;\n\n    if (!active) {\n      for (const o of objects) {\n        scene.remove(o.object);\n        world.removeBody(o.body);\n      }\n\n      objects.length = 0;\n      results.value = null;\n    }\n\n    active = true;\n    add(pick.die, new Vec3(pick.object.position.x, pick.object.position.y, pick.object.position.z));\n  });\n\n  let time = 0;\n  let active = false;\n  function render(t: number) {\n    const delta = t - time;\n    time = t;\n    canvas.style.cursor = picking ? 'pointer' : 'default';\n\n    const axis = new Vector3(3, 1, -3).normalize();\n    for (const picker of pickers) {\n      if (picker == picking || picker.rotation % 50 != 0) {\n        if (picker == picking)\n          picker.rotation += .06 * delta;\n        else if (picker.rotation > 45 || picker.rotation < 5)\n          picker.rotation = 0;\n        else if (picker.rotation < 25)\n          picker.rotation -= .3 * delta;\n        else\n          picker.rotation += .3 * delta;\n\n        picker.rotation %= 50;\n\n        const q = new Quaternion().setFromAxisAngle(axis, picker.rotation * Math.PI / 25);\n        q.multiply(picker.orientation);\n        q.normalize();\n        picker.object.quaternion.copy(q);\n      } else {\n        picker.object.quaternion.copy(picker.orientation);\n      }\n\n      picker.object.updateMatrix();\n    }\n\n    if (active) {\n      if (delta > 0) {\n        world.step(delta / 1000);\n      }\n\n      for (const o of objects) {\n        Die.update(o);\n\n        const value = Math.min(Math.max((time - o.t0) / 800, 0), 1);\n        const scale = 0.5 + 0.5 * value;\n        o.object.scale.set(scale, scale, scale);\n\n        if (Die.resolve(o)) {\n          o.body.type = Body.STATIC;\n        }\n      }\n\n      const done: [Body, Body][] = [];\n      const bumps = world.contacts.map(c => [c.bi, c.bj]);\n      const strength = Math.min(150, 40 * world.time);\n\n      for (const [a, b] of bumps) {\n        if (a == floor || b == floor) continue;\n        if (done.some(c => a == c[0] && b == c[1] || b == c[0] && a == c[1])) continue;\n        done.push([a, b]);\n\n        if (walls.includes(a) || walls.includes(b)) {\n          const [die, wall] = walls.includes(a) ? [b, a] : [a, b];\n          const normal = wall.quaternion.vmult(Vec3.UNIT_Z);\n          die.applyForce(normal.scale(strength));\n        } else {\n          const dir = a.position.vsub(b.position).unit();\n          a.applyForce(dir.scale(strength / 2));\n          b.applyForce(dir.scale(-strength / 2));\n        }\n      }\n\n      active = objects.some(o => o.body.type != Body.STATIC);\n\n      if (!active) {\n        results.value = objects.map(o => Die.resolve(o)!);\n      }\n    }\n\n    // orbit.update();\n    renderer.render(scene, camera);\n    requestAnimationFrame(render);\n  }\n\n  requestAnimationFrame(render);\n}\n\ndeclare global {\n  interface Window {\n    diceCleanup?: () => void;\n  }\n}\n\nexport function initDiceInspector(canvas: HTMLCanvasElement) {\n  window.diceCleanup?.();\n\n  const dice = loadDice();\n\n  const box = canvas.getBoundingClientRect();\n  canvas.width = box.width;\n  canvas.height = box.height;\n\n  const { scene, camera, renderer } = initScene(canvas);\n\n  const orbit = new OrbitControls(camera, canvas);\n\n  const allDice = Reflect.ownKeys(dice).map(k => dice[k as keyof Dice]);\n  const pickers = allDice.map((die, i) => {\n    const position = new Vector2(\n      5 * ((i % 3) - 1),\n      i < 3 ? 2.5 : -2.5,\n    );\n\n    const object = Die.createObject(die, color);\n\n    const rotation = new Quaternion().setFromUnitVectors(\n      new Vector3(die.model.faces[0].normal.x, die.model.faces[0].normal.y, die.model.faces[0].normal.z),\n      new Vector3(0, -1, 0)\n    );\n\n    const center = new Vec3();\n    for (const v of die.model.faces[0].vertices) center.vadd(v.point, center);\n    center.scale(1 / die.model.faces[0].vertices.length, center);\n\n    const b = new Vector3();\n    b.copy(die.model.faces[0].vertices[1].point as any);\n    b.sub(center as any);\n    b.normalize();\n    b.applyQuaternion(rotation);\n\n    const q = new Quaternion();\n    if (die.model.faces.length == 6)\n      q.setFromAxisAngle(new Vector3(0, 1, 0), Math.PI * 5 / 4);\n\n    else if (die.model.faces.length == 8)\n      q.setFromAxisAngle(new Vector3(0, 1, 0), Math.PI * 2 / 3);\n\n    q.multiply(new Quaternion().setFromUnitVectors(b, new Vector3(0, 0, 1)));\n    q.multiply(rotation);\n    q.normalize();\n\n    object.quaternion.copy(q);\n    object.scale.set(3, 3, 3);\n    object.position.set(position.x, 3, position.y);\n    scene.add(object);\n\n    return {\n      die,\n      object,\n      position,\n      orientation: q,\n      rotation: 0,\n    };\n  });\n\n  let active = false;\n  function render(time: number) {\n    // const q = new Quaternion();\n    // for (const o of pickers) {\n    //   q.setFromAxisAngle(new Vector3(1, 1, 1), Math.PI / 500);\n    //   q.multiply(o.object.quaternion);\n    //   q.normalize();\n    //   o.object.quaternion.copy(q);\n    // }\n    renderer.render(scene, camera);\n    request = requestAnimationFrame(render);\n  }\n\n  let request = requestAnimationFrame(render);\n\n  window.diceCleanup = () => {\n    cancelAnimationFrame(request);\n    renderer.dispose();\n    orbit.dispose();\n  };\n}\n","import { render } from \"./main.vue?vue&type=template&id=24ec25aa&scoped=true\"\nimport script from \"./main.vue?vue&type=script&lang=js\"\nexport * from \"./main.vue?vue&type=script&lang=js\"\n\nimport \"./main.vue?vue&type=style&index=0&id=24ec25aa&lang=scss&scoped=true\"\nimport \"./main.vue?vue&type=style&index=1&id=24ec25aa&lang=scss\"\n\nimport exportComponent from \"/home/mfro/code/web-apps/dice/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-24ec25aa\"]])\n\nexport default __exports__","import { createApp } from 'vue';\n\nimport App from './main.vue';\n\nconst app = createApp(App);\napp.mount('#app');\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./main.vue?vue&type=style&index=1&id=24ec25aa&lang=scss\"","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./main.vue?vue&type=style&index=0&id=24ec25aa&lang=scss&scoped=true\""],"sourceRoot":""}